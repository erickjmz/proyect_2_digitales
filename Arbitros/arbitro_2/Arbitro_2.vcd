$date
	Fri Nov 26 12:27:22 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module BUF $end
$var wire 1 ! A $end
$var wire 1 " Y $end
$upscope $end
$scope module BancoPruebas $end
$var wire 1 # pop $end
$var wire 1 $ push0 $end
$var wire 1 % push1 $end
$var wire 1 & push2 $end
$var wire 1 ' push3 $end
$var wire 4 ( state [3:0] $end
$var wire 1 ) empty $end
$var wire 1 * clk $end
$var wire 1 + almost_full3 $end
$var wire 1 , almost_full2 $end
$var wire 1 - almost_full1 $end
$var wire 1 . almost_full0 $end
$scope module Probador $end
$var wire 1 # pop $end
$var wire 1 $ push0 $end
$var wire 1 % push1 $end
$var wire 1 & push2 $end
$var wire 1 ' push3 $end
$var reg 1 . almost_full0 $end
$var reg 1 - almost_full1 $end
$var reg 1 , almost_full2 $end
$var reg 1 + almost_full3 $end
$var reg 1 * clk $end
$var reg 1 ) empty $end
$var reg 4 / state [3:0] $end
$upscope $end
$scope module arbitro_2_conductual $end
$var wire 1 . almost_full0 $end
$var wire 1 - almost_full1 $end
$var wire 1 , almost_full2 $end
$var wire 1 + almost_full3 $end
$var wire 1 * clk $end
$var wire 1 ) empty $end
$var wire 4 0 state [3:0] $end
$var reg 2 1 contador [1:0] $end
$var reg 1 2 pop $end
$var reg 1 3 push0 $end
$var reg 1 4 push1 $end
$var reg 1 5 push2 $end
$var reg 1 6 push3 $end
$upscope $end
$scope module arbitro_2_estructural $end
$var wire 1 . almost_full0 $end
$var wire 1 - almost_full1 $end
$var wire 1 , almost_full2 $end
$var wire 1 + almost_full3 $end
$var wire 1 * clk $end
$var wire 2 7 contador [1:0] $end
$var wire 1 ) empty $end
$var wire 1 # pop $end
$var wire 1 $ push0 $end
$var wire 1 % push1 $end
$var wire 1 & push2 $end
$var wire 1 ' push3 $end
$var wire 4 8 state [3:0] $end
$var wire 1 9 _08_ $end
$var wire 1 : _07_ $end
$var wire 1 ; _06_ $end
$var wire 1 < _05_ $end
$var wire 1 = _04_ $end
$var wire 1 > _03_ $end
$var wire 1 ? _02_ $end
$var wire 1 @ _01_ $end
$var wire 1 A _00_ $end
$scope module _09_ $end
$var wire 1 B A $end
$var wire 1 @ Y $end
$upscope $end
$scope module _10_ $end
$var wire 1 C A $end
$var wire 1 D B $end
$var wire 1 ? Y $end
$upscope $end
$scope module _11_ $end
$var wire 1 ? A $end
$var wire 1 > Y $end
$upscope $end
$scope module _12_ $end
$var wire 1 @ A $end
$var wire 1 E B $end
$var wire 1 = Y $end
$upscope $end
$scope module _13_ $end
$var wire 1 > A $end
$var wire 1 = B $end
$var wire 1 < Y $end
$upscope $end
$scope module _14_ $end
$var wire 1 < A $end
$var wire 1 A Y $end
$upscope $end
$scope module _15_ $end
$var wire 1 . A $end
$var wire 1 - B $end
$var wire 1 ; Y $end
$upscope $end
$scope module _16_ $end
$var wire 1 , A $end
$var wire 1 + B $end
$var wire 1 : Y $end
$upscope $end
$scope module _17_ $end
$var wire 1 ; A $end
$var wire 1 : B $end
$var wire 1 9 Y $end
$upscope $end
$scope module _18_ $end
$var wire 1 9 A $end
$var wire 1 # Y $end
$upscope $end
$scope module _19_ $end
$var wire 1 ) A $end
$var wire 1 < B $end
$var wire 1 $ Y $end
$upscope $end
$scope module _20_ $end
$var wire 1 * C $end
$var wire 1 A D $end
$var reg 1 F Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module DFFSR $end
$var wire 1 G C $end
$var wire 1 H D $end
$var wire 1 I R $end
$var wire 1 J S $end
$var reg 1 K Q $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xK
zJ
zI
zH
zG
xF
1E
0D
0C
0B
0A
1@
1?
0>
0=
1<
1;
1:
09
b1 8
b0 7
06
05
04
03
12
bx 1
b1 0
b1 /
0.
0-
0,
0+
0*
0)
b1 (
0'
0&
0%
x$
x#
z"
z!
$end
#2
1$
13
b1 1
02
0F
1*
#4
0*
#6
1A
0<
1>
0?
1=
1C
0E
1$
13
b10 (
b10 /
b10 0
b10 8
b1 1
1*
#8
0*
#10
1#
12
1F
1*
#12
0*
#14
b10 1
x%
14
x$
03
1)
1*
#16
0*
#18
19
0;
x#
02
1-
1*
#20
0*
#22
12
1*
#24
0*
#26
02
0.
1*
#28
0*
#30
12
1*
#32
0*
#34
02
0.
1*
#36
0*
#38
12
1*
#40
0*
#42
02
1.
1*
#44
0*
#46
b11 1
0%
04
0)
12
1*
#48
0*
#50
1#
09
1;
0-
0.
1*
#52
0*
#54
1*
#56
0*
#58
1*
#60
0*
#62
1*
#64
0*
#66
1*
#68
0*
#70
b0 1
x'
16
1)
1*
#72
0*
#74
1*
#76
0*
#78
1*
#80
0*
#82
1*
#84
0*
#86
1*
#88
0*
#90
1*
#92
0*
#94
1*
#96
0*
#98
1*
#99
