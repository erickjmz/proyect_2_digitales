$date
	Fri Nov 26 15:23:43 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module BancoPruebas $end
$var wire 5 ! contador_e [4:0] $end
$var wire 12 " data_out0_e [11:0] $end
$var wire 12 # data_out1_e [11:0] $end
$var wire 12 $ data_out2_e [11:0] $end
$var wire 12 % data_out3_e [11:0] $end
$var wire 1 & valid_4 $end
$var wire 1 ' valid_5 $end
$var wire 1 ( valid_6 $end
$var wire 1 ) valid_7 $end
$var wire 1 * valid_e $end
$var wire 1 + valid_c $end
$var wire 1 , valid_3 $end
$var wire 1 - valid_2 $end
$var wire 1 . valid_1 $end
$var wire 1 / valid_0 $end
$var wire 1 0 reset $end
$var wire 1 1 req $end
$var wire 1 2 push_in3 $end
$var wire 1 3 push_in2 $end
$var wire 1 4 push_in1 $end
$var wire 1 5 push_in0 $end
$var wire 1 6 pop_in3 $end
$var wire 1 7 pop_in2 $end
$var wire 1 8 pop_in1 $end
$var wire 1 9 pop_in0 $end
$var wire 1 : init $end
$var wire 3 ; idx [2:0] $end
$var wire 1 < idle $end
$var wire 12 = data_out3_c [11:0] $end
$var wire 12 > data_out2_c [11:0] $end
$var wire 12 ? data_out1_c [11:0] $end
$var wire 12 @ data_out0_c [11:0] $end
$var wire 12 A data_in3 [11:0] $end
$var wire 12 B data_in2 [11:0] $end
$var wire 12 C data_in1 [11:0] $end
$var wire 12 D data_in0 [11:0] $end
$var wire 5 E contador_c [4:0] $end
$var wire 1 F clk $end
$var wire 2 G class [1:0] $end
$var wire 3 H Umbral_bajo [2:0] $end
$var wire 3 I Umbral_alto [2:0] $end
$scope module TL_conductual $end
$var wire 1 J almost_empty $end
$var wire 1 K almost_full0 $end
$var wire 1 L almost_full1 $end
$var wire 1 M almost_full2 $end
$var wire 1 N empty7 $end
$var wire 1 O pop_in4 $end
$var wire 1 P pop_wire4 $end
$var wire 12 Q wireX [11:0] $end
$var wire 1 R valid_7 $end
$var wire 1 S valid_6 $end
$var wire 1 T valid_5 $end
$var wire 1 U valid_4 $end
$var wire 1 , valid_3 $end
$var wire 1 - valid_2 $end
$var wire 1 . valid_1 $end
$var wire 1 / valid_0 $end
$var wire 1 + valid $end
$var wire 3 V umbral_superior [2:0] $end
$var wire 3 W umbral_inferior [2:0] $end
$var wire 4 X state [3:0] $end
$var wire 1 0 reset $end
$var wire 1 1 req $end
$var wire 1 2 push_in3 $end
$var wire 1 3 push_in2 $end
$var wire 1 4 push_in1 $end
$var wire 1 5 push_in0 $end
$var wire 1 Y pushA3 $end
$var wire 1 Z pushA2 $end
$var wire 1 [ pushA1 $end
$var wire 1 \ pushA0 $end
$var wire 1 ] push $end
$var wire 1 ^ pop_wire3 $end
$var wire 1 _ pop_wire2 $end
$var wire 1 ` pop_wire1 $end
$var wire 1 a pop_wire0 $end
$var wire 1 6 pop_in3 $end
$var wire 1 7 pop_in2 $end
$var wire 1 8 pop_in1 $end
$var wire 1 9 pop_in0 $end
$var wire 1 b popArbitro2 $end
$var wire 12 c outMUX [11:0] $end
$var wire 12 d outFIFO_in4 [11:0] $end
$var wire 12 e outFIFO_in3 [11:0] $end
$var wire 12 f outFIFO_in2 [11:0] $end
$var wire 12 g outFIFO_in1 [11:0] $end
$var wire 12 h outFIFO_in0 [11:0] $end
$var wire 12 i outDEMUXB3 [11:0] $end
$var wire 12 j outDEMUXB2 [11:0] $end
$var wire 12 k outDEMUXB1 [11:0] $end
$var wire 12 l outDEMUXB0 [11:0] $end
$var wire 12 m outDEMUXA3 [11:0] $end
$var wire 12 n outDEMUXA2 [11:0] $end
$var wire 12 o outDEMUXA1 [11:0] $end
$var wire 12 p outDEMUXA0 [11:0] $end
$var wire 1 : init $end
$var wire 3 q idx [2:0] $end
$var wire 1 < idle $end
$var wire 1 r empty8 $end
$var wire 1 s empty6 $end
$var wire 1 t empty5 $end
$var wire 1 u empty4 $end
$var wire 1 v empty3 $end
$var wire 1 w empty2 $end
$var wire 1 x empty1 $end
$var wire 1 y empty0 $end
$var wire 10 z empties [9:0] $end
$var wire 12 { data_out3 [11:0] $end
$var wire 12 | data_out2 [11:0] $end
$var wire 12 } data_out1 [11:0] $end
$var wire 12 ~ data_out0 [11:0] $end
$var wire 12 !" data_in3 [11:0] $end
$var wire 12 "" data_in2 [11:0] $end
$var wire 12 #" data_in1 [11:0] $end
$var wire 12 $" data_in0 [11:0] $end
$var wire 5 %" contador [4:0] $end
$var wire 1 F clk $end
$var wire 2 &" class [1:0] $end
$var wire 1 '" almost_fullB3 $end
$var wire 1 (" almost_fullB2 $end
$var wire 1 )" almost_fullB1 $end
$var wire 1 *" almost_fullB0 $end
$var wire 1 +" almost_fullA3 $end
$var wire 1 ," almost_fullA2 $end
$var wire 1 -" almost_fullA1 $end
$var wire 1 ." almost_fullA0 $end
$var wire 1 /" almost_full3 $end
$var wire 1 0" almost_full $end
$var wire 3 1" Umbral_bajo [2:0] $end
$var wire 3 2" Umbral_alto [2:0] $end
$scope module Contadores $end
$var wire 1 O pop_4 $end
$var wire 1 0 reset_L $end
$var wire 1 6 pop_3 $end
$var wire 1 7 pop_2 $end
$var wire 1 8 pop_1 $end
$var wire 1 9 pop_0 $end
$var wire 3 3" idx [2:0] $end
$var wire 1 < idle $end
$var wire 1 F clk $end
$var reg 5 4" data_0 [4:0] $end
$var reg 5 5" data_1 [4:0] $end
$var reg 5 6" data_2 [4:0] $end
$var reg 5 7" data_3 [4:0] $end
$var reg 5 8" data_4 [4:0] $end
$var reg 5 9" data_out [4:0] $end
$var reg 1 + valid $end
$upscope $end
$scope module DEMUX1 $end
$var wire 2 :" class [1:0] $end
$var wire 1 0 reset_L $end
$var wire 12 ;" data_in [11:0] $end
$var wire 1 F clk $end
$var reg 12 <" data_out0 [11:0] $end
$var reg 12 =" data_out1 [11:0] $end
$var reg 12 >" data_out2 [11:0] $end
$var reg 12 ?" data_out3 [11:0] $end
$var reg 1 / valid_0 $end
$var reg 1 . valid_1 $end
$var reg 1 - valid_2 $end
$var reg 1 , valid_3 $end
$upscope $end
$scope module DEMUX2 $end
$var wire 2 @" class [1:0] $end
$var wire 1 0 reset_L $end
$var wire 12 A" data_in [11:0] $end
$var wire 1 F clk $end
$var reg 12 B" data_out0 [11:0] $end
$var reg 12 C" data_out1 [11:0] $end
$var reg 12 D" data_out2 [11:0] $end
$var reg 12 E" data_out3 [11:0] $end
$var reg 1 U valid_0 $end
$var reg 1 T valid_1 $end
$var reg 1 S valid_2 $end
$var reg 1 R valid_3 $end
$upscope $end
$scope module FIFO_in0 $end
$var wire 12 F" data_in [11:0] $end
$var wire 1 G" push $end
$var wire 3 H" um_sup [2:0] $end
$var wire 3 I" um_inf [2:0] $end
$var wire 4 J" state [3:0] $end
$var wire 1 a pop $end
$var wire 12 K" data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 L" alm_empty $end
$var reg 1 ." alm_full $end
$var reg 4 M" contador [3:0] $end
$var reg 1 y empty $end
$var reg 1 N" full $end
$var reg 3 O" low_space [2:0] $end
$var reg 3 P" much_space [2:0] $end
$var reg 3 Q" rd_ptr [2:0] $end
$var reg 1 R" re_a $end
$var reg 1 S" we_a $end
$var reg 3 T" wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 U" addr_ra [2:0] $end
$var wire 3 V" addr_wa [2:0] $end
$var wire 12 W" data_a [11:0] $end
$var wire 1 R" re_a $end
$var wire 1 S" we_a $end
$var wire 4 X" state [3:0] $end
$var wire 1 F clk $end
$var reg 12 Y" q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_in1 $end
$var wire 12 Z" data_in [11:0] $end
$var wire 1 [" push $end
$var wire 3 \" um_sup [2:0] $end
$var wire 3 ]" um_inf [2:0] $end
$var wire 4 ^" state [3:0] $end
$var wire 1 ` pop $end
$var wire 12 _" data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 `" alm_empty $end
$var reg 1 -" alm_full $end
$var reg 4 a" contador [3:0] $end
$var reg 1 x empty $end
$var reg 1 b" full $end
$var reg 3 c" low_space [2:0] $end
$var reg 3 d" much_space [2:0] $end
$var reg 3 e" rd_ptr [2:0] $end
$var reg 1 f" re_a $end
$var reg 1 g" we_a $end
$var reg 3 h" wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 i" addr_ra [2:0] $end
$var wire 3 j" addr_wa [2:0] $end
$var wire 12 k" data_a [11:0] $end
$var wire 1 f" re_a $end
$var wire 1 g" we_a $end
$var wire 4 l" state [3:0] $end
$var wire 1 F clk $end
$var reg 12 m" q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_in2 $end
$var wire 12 n" data_in [11:0] $end
$var wire 1 o" push $end
$var wire 3 p" um_sup [2:0] $end
$var wire 3 q" um_inf [2:0] $end
$var wire 4 r" state [3:0] $end
$var wire 1 _ pop $end
$var wire 12 s" data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 t" alm_empty $end
$var reg 1 ," alm_full $end
$var reg 4 u" contador [3:0] $end
$var reg 1 w empty $end
$var reg 1 v" full $end
$var reg 3 w" low_space [2:0] $end
$var reg 3 x" much_space [2:0] $end
$var reg 3 y" rd_ptr [2:0] $end
$var reg 1 z" re_a $end
$var reg 1 {" we_a $end
$var reg 3 |" wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 }" addr_ra [2:0] $end
$var wire 3 ~" addr_wa [2:0] $end
$var wire 12 !# data_a [11:0] $end
$var wire 1 z" re_a $end
$var wire 1 {" we_a $end
$var wire 4 "# state [3:0] $end
$var wire 1 F clk $end
$var reg 12 ## q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_in3 $end
$var wire 12 $# data_in [11:0] $end
$var wire 1 %# push $end
$var wire 3 &# um_sup [2:0] $end
$var wire 3 '# um_inf [2:0] $end
$var wire 4 (# state [3:0] $end
$var wire 1 ^ pop $end
$var wire 12 )# data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 *# alm_empty $end
$var reg 1 +" alm_full $end
$var reg 4 +# contador [3:0] $end
$var reg 1 v empty $end
$var reg 1 ,# full $end
$var reg 3 -# low_space [2:0] $end
$var reg 3 .# much_space [2:0] $end
$var reg 3 /# rd_ptr [2:0] $end
$var reg 1 0# re_a $end
$var reg 1 1# we_a $end
$var reg 3 2# wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 3# addr_ra [2:0] $end
$var wire 3 4# addr_wa [2:0] $end
$var wire 12 5# data_a [11:0] $end
$var wire 1 0# re_a $end
$var wire 1 1# we_a $end
$var wire 4 6# state [3:0] $end
$var wire 1 F clk $end
$var reg 12 7# q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_in4 $end
$var wire 1 P pop $end
$var wire 3 8# um_sup [2:0] $end
$var wire 3 9# um_inf [2:0] $end
$var wire 4 :# state [3:0] $end
$var wire 1 5 push $end
$var wire 12 ;# data_out [11:0] $end
$var wire 12 <# data_in [11:0] $end
$var wire 1 F clk $end
$var reg 1 =# alm_empty $end
$var reg 1 0" alm_full $end
$var reg 4 ># contador [3:0] $end
$var reg 1 r empty $end
$var reg 1 ?# full $end
$var reg 3 @# low_space [2:0] $end
$var reg 3 A# much_space [2:0] $end
$var reg 3 B# rd_ptr [2:0] $end
$var reg 1 C# re_a $end
$var reg 1 D# we_a $end
$var reg 3 E# wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 F# addr_ra [2:0] $end
$var wire 3 G# addr_wa [2:0] $end
$var wire 1 C# re_a $end
$var wire 1 D# we_a $end
$var wire 4 H# state [3:0] $end
$var wire 12 I# data_a [11:0] $end
$var wire 1 F clk $end
$var reg 12 J# q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_out0 $end
$var wire 12 K# data_in [11:0] $end
$var wire 3 L# um_sup [2:0] $end
$var wire 3 M# um_inf [2:0] $end
$var wire 4 N# state [3:0] $end
$var wire 1 ] push $end
$var wire 1 9 pop $end
$var wire 12 O# data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 P# alm_empty $end
$var reg 1 *" alm_full $end
$var reg 4 Q# contador [3:0] $end
$var reg 1 u empty $end
$var reg 1 R# full $end
$var reg 3 S# low_space [2:0] $end
$var reg 3 T# much_space [2:0] $end
$var reg 3 U# rd_ptr [2:0] $end
$var reg 1 V# re_a $end
$var reg 1 W# we_a $end
$var reg 3 X# wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 Y# addr_ra [2:0] $end
$var wire 3 Z# addr_wa [2:0] $end
$var wire 12 [# data_a [11:0] $end
$var wire 1 V# re_a $end
$var wire 1 W# we_a $end
$var wire 4 \# state [3:0] $end
$var wire 1 F clk $end
$var reg 12 ]# q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_out1 $end
$var wire 12 ^# data_in [11:0] $end
$var wire 3 _# um_sup [2:0] $end
$var wire 3 `# um_inf [2:0] $end
$var wire 4 a# state [3:0] $end
$var wire 1 ] push $end
$var wire 1 8 pop $end
$var wire 12 b# data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 c# alm_empty $end
$var reg 1 )" alm_full $end
$var reg 4 d# contador [3:0] $end
$var reg 1 t empty $end
$var reg 1 e# full $end
$var reg 3 f# low_space [2:0] $end
$var reg 3 g# much_space [2:0] $end
$var reg 3 h# rd_ptr [2:0] $end
$var reg 1 i# re_a $end
$var reg 1 j# we_a $end
$var reg 3 k# wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 l# addr_ra [2:0] $end
$var wire 3 m# addr_wa [2:0] $end
$var wire 12 n# data_a [11:0] $end
$var wire 1 i# re_a $end
$var wire 1 j# we_a $end
$var wire 4 o# state [3:0] $end
$var wire 1 F clk $end
$var reg 12 p# q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_out2 $end
$var wire 12 q# data_in [11:0] $end
$var wire 3 r# um_sup [2:0] $end
$var wire 3 s# um_inf [2:0] $end
$var wire 4 t# state [3:0] $end
$var wire 1 ] push $end
$var wire 1 7 pop $end
$var wire 12 u# data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 v# alm_empty $end
$var reg 1 (" alm_full $end
$var reg 4 w# contador [3:0] $end
$var reg 1 s empty $end
$var reg 1 x# full $end
$var reg 3 y# low_space [2:0] $end
$var reg 3 z# much_space [2:0] $end
$var reg 3 {# rd_ptr [2:0] $end
$var reg 1 |# re_a $end
$var reg 1 }# we_a $end
$var reg 3 ~# wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 !$ addr_ra [2:0] $end
$var wire 3 "$ addr_wa [2:0] $end
$var wire 12 #$ data_a [11:0] $end
$var wire 1 |# re_a $end
$var wire 1 }# we_a $end
$var wire 4 $$ state [3:0] $end
$var wire 1 F clk $end
$var reg 12 %$ q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_out3 $end
$var wire 12 &$ data_in [11:0] $end
$var wire 3 '$ um_sup [2:0] $end
$var wire 3 ($ um_inf [2:0] $end
$var wire 4 )$ state [3:0] $end
$var wire 1 ] push $end
$var wire 1 6 pop $end
$var wire 12 *$ data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 +$ alm_empty $end
$var reg 1 '" alm_full $end
$var reg 4 ,$ contador [3:0] $end
$var reg 1 -$ empty $end
$var reg 1 .$ full $end
$var reg 3 /$ low_space [2:0] $end
$var reg 3 0$ much_space [2:0] $end
$var reg 3 1$ rd_ptr [2:0] $end
$var reg 1 2$ re_a $end
$var reg 1 3$ we_a $end
$var reg 3 4$ wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 5$ addr_ra [2:0] $end
$var wire 3 6$ addr_wa [2:0] $end
$var wire 12 7$ data_a [11:0] $end
$var wire 1 2$ re_a $end
$var wire 1 3$ we_a $end
$var wire 4 8$ state [3:0] $end
$var wire 1 F clk $end
$var reg 12 9$ q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_out4 $end
$var wire 3 :$ um_sup [2:0] $end
$var wire 3 ;$ um_inf [2:0] $end
$var wire 4 <$ state [3:0] $end
$var wire 1 ] push $end
$var wire 1 b pop $end
$var wire 12 =$ data_out [11:0] $end
$var wire 12 >$ data_in [11:0] $end
$var wire 1 F clk $end
$var reg 1 ?$ alm_empty $end
$var reg 1 /" alm_full $end
$var reg 4 @$ contador [3:0] $end
$var reg 1 A$ empty $end
$var reg 1 B$ full $end
$var reg 3 C$ low_space [2:0] $end
$var reg 3 D$ much_space [2:0] $end
$var reg 3 E$ rd_ptr [2:0] $end
$var reg 1 F$ re_a $end
$var reg 1 G$ we_a $end
$var reg 3 H$ wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 I$ addr_ra [2:0] $end
$var wire 3 J$ addr_wa [2:0] $end
$var wire 1 F$ re_a $end
$var wire 1 G$ we_a $end
$var wire 4 K$ state [3:0] $end
$var wire 12 L$ data_a [11:0] $end
$var wire 1 F clk $end
$var reg 12 M$ q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FSM $end
$var wire 1 0 reset $end
$var wire 1 : init $end
$var wire 10 N$ empties [9:0] $end
$var wire 1 F clk $end
$var wire 3 O$ Low_Threshold [2:0] $end
$var wire 3 P$ High_Threshold [2:0] $end
$var reg 4 Q$ Estado [3:0] $end
$var reg 4 R$ ProximoEstado [3:0] $end
$var reg 3 S$ inf_Threshold [2:0] $end
$var reg 4 T$ state [3:0] $end
$var reg 3 U$ sup_Threshold [2:0] $end
$upscope $end
$scope module MUX $end
$var wire 12 V$ data_in0 [11:0] $end
$var wire 12 W$ data_in1 [11:0] $end
$var wire 12 X$ data_in2 [11:0] $end
$var wire 12 Y$ data_in3 [11:0] $end
$var wire 1 0 reset_L $end
$var wire 1 F clk $end
$var reg 12 Z$ data_out [11:0] $end
$var reg 4 [$ hola [3:0] $end
$upscope $end
$scope module arbitro $end
$var wire 1 K almost_full0 $end
$var wire 1 L almost_full1 $end
$var wire 1 M almost_full2 $end
$var wire 1 /" almost_full3 $end
$var wire 1 y empty0_orange $end
$var wire 1 u empty0_purple $end
$var wire 1 x empty1_orange $end
$var wire 1 t empty1_purple $end
$var wire 1 w empty2_orange $end
$var wire 1 s empty2_purple $end
$var wire 1 v empty3_orange $end
$var wire 1 N empty3_purple $end
$var wire 4 \$ state [3:0] $end
$var wire 1 F clk $end
$var reg 10 ]$ empties [9:0] $end
$var reg 1 a pop0 $end
$var reg 1 ` pop1 $end
$var reg 1 _ pop2 $end
$var reg 1 ^ pop3 $end
$var reg 1 ] push $end
$upscope $end
$scope module arbitro_2 $end
$var wire 1 ." almost_full0 $end
$var wire 1 -" almost_full1 $end
$var wire 1 ," almost_full2 $end
$var wire 1 +" almost_full3 $end
$var wire 1 r empty $end
$var wire 4 ^$ state [3:0] $end
$var wire 1 F clk $end
$var reg 2 _$ contador [1:0] $end
$var reg 1 b pop $end
$var reg 1 \ push0 $end
$var reg 1 [ push1 $end
$var reg 1 Z push2 $end
$var reg 1 Y push3 $end
$upscope $end
$upscope $end
$scope module testbench $end
$var wire 5 `$ contador_c [4:0] $end
$var wire 5 a$ contador_e [4:0] $end
$var wire 12 b$ data_out0_c [11:0] $end
$var wire 12 c$ data_out0_e [11:0] $end
$var wire 12 d$ data_out1_c [11:0] $end
$var wire 12 e$ data_out1_e [11:0] $end
$var wire 12 f$ data_out2_c [11:0] $end
$var wire 12 g$ data_out2_e [11:0] $end
$var wire 12 h$ data_out3_c [11:0] $end
$var wire 12 i$ data_out3_e [11:0] $end
$var wire 1 / valid_0 $end
$var wire 1 . valid_1 $end
$var wire 1 - valid_2 $end
$var wire 1 , valid_3 $end
$var wire 1 & valid_4 $end
$var wire 1 ' valid_5 $end
$var wire 1 ( valid_6 $end
$var wire 1 ) valid_7 $end
$var wire 1 + valid_c $end
$var wire 1 * valid_e $end
$var reg 3 j$ Umbral_alto [2:0] $end
$var reg 3 k$ Umbral_bajo [2:0] $end
$var reg 2 l$ class [1:0] $end
$var reg 1 F clk $end
$var reg 12 m$ data_in0 [11:0] $end
$var reg 12 n$ data_in1 [11:0] $end
$var reg 12 o$ data_in2 [11:0] $end
$var reg 12 p$ data_in3 [11:0] $end
$var reg 1 < idle $end
$var reg 3 q$ idx [2:0] $end
$var reg 1 : init $end
$var reg 1 9 pop_in0 $end
$var reg 1 8 pop_in1 $end
$var reg 1 7 pop_in2 $end
$var reg 1 6 pop_in3 $end
$var reg 1 r$ pop_in4 $end
$var reg 1 5 push_in0 $end
$var reg 1 4 push_in1 $end
$var reg 1 3 push_in2 $end
$var reg 1 2 push_in3 $end
$var reg 1 1 req $end
$var reg 1 0 reset $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0r$
b0 q$
b0 p$
b0 o$
b0 n$
b0 m$
bx l$
b0 k$
b0 j$
bz i$
bx h$
bz g$
bx f$
bz e$
bx d$
bz c$
bx b$
bz a$
bx `$
bx _$
b1 ^$
b0 ]$
b1 \$
bx [$
bx Z$
bx Y$
bx X$
bx W$
bx V$
bx U$
b1 T$
bx S$
b0 R$
bx Q$
b0 P$
b0 O$
b0 N$
bx M$
bx L$
b1 K$
bx J$
bx I$
bx H$
0G$
0F$
bx E$
bx D$
bx C$
xB$
xA$
bx @$
0?$
bx >$
bx =$
b1 <$
bx ;$
bx :$
bx 9$
b1 8$
bx 7$
bx 6$
bx 5$
bx 4$
03$
02$
bx 1$
bx 0$
bx /$
x.$
x-$
bx ,$
0+$
bx *$
b1 )$
bx ($
bx '$
bx &$
bx %$
b1 $$
bx #$
bx "$
bx !$
bx ~#
0}#
0|#
bx {#
bx z#
bx y#
xx#
bx w#
0v#
bx u#
b1 t#
bx s#
bx r#
bx q#
bx p#
b1 o#
bx n#
bx m#
bx l#
bx k#
0j#
0i#
bx h#
bx g#
bx f#
xe#
bx d#
0c#
bx b#
b1 a#
bx `#
bx _#
bx ^#
bx ]#
b1 \#
bx [#
bx Z#
bx Y#
bx X#
0W#
0V#
bx U#
bx T#
bx S#
xR#
bx Q#
0P#
bx O#
b1 N#
bx M#
bx L#
bx K#
bx J#
b0 I#
b1 H#
bx G#
bx F#
bx E#
0D#
0C#
bx B#
bx A#
bx @#
x?#
bx >#
0=#
b0 <#
bx ;#
b1 :#
bx 9#
bx 8#
bx 7#
b1 6#
bx 5#
bx 4#
bx 3#
bx 2#
01#
00#
bx /#
bx .#
bx -#
x,#
bx +#
0*#
bx )#
b1 (#
bx '#
bx &#
z%#
bx $#
bx ##
b1 "#
bx !#
bx ~"
bx }"
bx |"
0{"
0z"
bx y"
bx x"
bx w"
xv"
bx u"
0t"
bx s"
b1 r"
bx q"
bx p"
zo"
bx n"
bx m"
b1 l"
bx k"
bx j"
bx i"
bx h"
0g"
0f"
bx e"
bx d"
bx c"
xb"
bx a"
0`"
bx _"
b1 ^"
bx ]"
bx \"
z["
bx Z"
bx Y"
b1 X"
bx W"
bx V"
bx U"
bx T"
0S"
0R"
bx Q"
bx P"
bx O"
xN"
bx M"
0L"
bx K"
b1 J"
bx I"
bx H"
zG"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
b0 3"
b0 2"
b0 1"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
bx &"
bx %"
b0 $"
b0 #"
b0 ""
b0 !"
bx ~
bx }
bx |
bx {
b0 z
xy
xx
xw
xv
xu
xt
xs
xr
b0 q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
1b
0a
0`
0_
0^
x]
0\
0[
0Z
0Y
b1 X
bx W
bx V
xU
xT
xS
xR
bx Q
zP
zO
xN
zM
zL
zK
0J
b0 I
b0 H
bx G
0F
bx E
b0 D
b0 C
b0 B
b0 A
bx @
bx ?
bx >
bx =
0<
b0 ;
0:
09
08
07
06
05
04
03
02
01
10
x/
x.
x-
x,
x+
z*
z)
z(
z'
z&
bz %
bz $
bz #
bz "
bz !
$end
#100
0,
0-
0.
1/
b0 m
b0 ?"
b0 $#
b0 5#
b0 n
b0 >"
b0 n"
b0 !#
b0 o
b0 ="
b0 Z"
b0 k"
b0 p
b0 <"
b0 F"
b0 W"
0R
0S
0T
1U
b0 i
b0 E"
b0 &$
b0 7$
b0 j
b0 D"
b0 q#
b0 #$
b0 k
b0 C"
b0 ^#
b0 n#
b0 l
b0 B"
b0 K#
b0 [#
b0 :"
b0 @"
b0 h
b0 K"
b0 Y"
b0 V$
b0 P"
b0 O"
b0 M"
b0 Q"
b0 U"
b0 T"
b0 V"
b0 g
b0 _"
b0 m"
b0 W$
b0 d"
b0 c"
b0 a"
b0 e"
b0 i"
b0 h"
b0 j"
b0 f
b0 s"
b0 ##
b0 X$
b0 x"
b0 w"
b0 u"
b0 y"
b0 }"
b0 |"
b0 ~"
b0 e
b0 )#
b0 7#
b0 Y$
b0 .#
b0 -#
b0 +#
b0 /#
b0 3#
b0 2#
b0 4#
b0 d
b0 ;"
b0 ;#
b0 J#
b0 A#
b0 @#
b0 >#
b0 B#
b0 F#
b0 E#
b0 G#
b0 @
b0 ~
b0 O#
b0 ]#
b0 b$
b0 T#
b0 S#
b0 Q#
b0 U#
b0 Y#
b0 X#
b0 Z#
b0 ?
b0 }
b0 b#
b0 p#
b0 d$
b0 g#
b0 f#
b0 d#
b0 h#
b0 l#
b0 k#
b0 m#
b0 >
b0 |
b0 u#
b0 %$
b0 f$
b0 z#
b0 y#
b0 w#
b0 {#
b0 !$
b0 ~#
b0 "$
b0 =
b0 {
b0 *$
b0 9$
b0 h$
b0 0$
b0 /$
b0 ,$
b0 1$
b0 5$
b0 4$
b0 6$
b0 Q
b0 A"
b0 =$
b0 M$
b0 D$
b0 C$
b0 @$
b0 E$
b0 I$
b0 H$
b0 J$
0+
0]
0b
b0 W
b0 I"
b0 ]"
b0 q"
b0 '#
b0 9#
b0 M#
b0 `#
b0 s#
b0 ($
b0 ;$
b0 S$
b0 V
b0 H"
b0 \"
b0 p"
b0 &#
b0 8#
b0 L#
b0 _#
b0 r#
b0 '$
b0 :$
b0 U$
b1 Q$
1:
b0 _$
1y
1x
1w
1v
1r
1u
1t
1s
1N
1-$
1A$
1F
#200
0F
#300
b0 c
b0 >$
b0 L$
b0 Z$
0/
0U
b10 R$
00
1F
#400
0F
#500
0b
1L"
1."
1`"
1-"
1t"
1,"
1*#
1+"
1=#
10"
1P#
1*"
1c#
1)"
1v#
1("
1+$
1'"
1J
1?$
1/"
b11111111 z
b11111111 N$
b11111111 ]$
b1 _$
1\
b100 R$
b10 X
b10 J"
b10 X"
b10 ^"
b10 l"
b10 r"
b10 "#
b10 (#
b10 6#
b10 :#
b10 H#
b10 N#
b10 \#
b10 a#
b10 o#
b10 t#
b10 $$
b10 )$
b10 8$
b10 <$
b10 K$
b10 T$
b10 \$
b10 ^$
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 E
b0 %"
b0 9"
b0 `$
b10 Q$
b111 I
b111 2"
b111 P$
b111 j$
1F
#600
0F
#700
1W#
1j#
1}#
13$
1G$
b110 I
b110 2"
b110 P$
b110 j$
b1 H
b1 1"
b1 O$
b1 k$
b111 V
b111 H"
b111 \"
b111 p"
b111 &#
b111 8#
b111 L#
b111 _#
b111 r#
b111 '$
b111 :$
b111 U$
1b
1]
1F
#800
0F
#900
0."
0-"
0,"
0+"
00"
0*"
0)"
0("
0'"
0/"
b111 O"
b111 c"
b111 w"
b111 -#
b111 @#
b111 S#
b111 f#
b111 y#
b111 /$
b111 C$
b1 W
b1 I"
b1 ]"
b1 q"
b1 '#
b1 9#
b1 M#
b1 `#
b1 s#
b1 ($
b1 ;$
b1 S$
b110 V
b110 H"
b110 \"
b110 p"
b110 &#
b110 8#
b110 L#
b110 _#
b110 r#
b110 '$
b110 :$
b110 U$
0:
1F
#1000
0F
#1100
b10 _$
1[
0\
1D#
b100 X
b100 J"
b100 X"
b100 ^"
b100 l"
b100 r"
b100 "#
b100 (#
b100 6#
b100 :#
b100 H#
b100 N#
b100 \#
b100 a#
b100 o#
b100 t#
b100 $$
b100 )$
b100 8$
b100 <$
b100 K$
b100 T$
b100 \$
b100 ^$
b1100001000 A
b1100001000 !"
b1100001000 p$
b1000000100 B
b1000000100 ""
b1000000100 o$
b100000010 C
b100000010 #"
b100000010 n$
b1 D
b1 $"
b1 <#
b1 I#
b1 m$
12
13
14
15
b100 Q$
b1 D$
b110 C$
b1 0$
b110 /$
b1 z#
b110 y#
b1 g#
b110 f#
b1 T#
b110 S#
b1 A#
b110 @#
b1 .#
b110 -#
b1 x"
b110 w"
b1 d"
b110 c"
b1 P"
b110 O"
1F
#1200
0F
#1300
b11 _$
0[
0D#
0r
b1 >#
b1 E#
b1 G#
03
05
1F
#1400
0F
#1500
1D#
b1100001001 A
b1100001001 !"
b1100001001 p$
b1000000101 B
b1000000101 ""
b1000000101 o$
b100000011 C
b100000011 #"
b100000011 n$
b10 D
b10 $"
b10 <#
b10 I#
b10 m$
02
13
04
15
1F
#1600
0F
#1700
xJ
0=#
0D#
b10 >#
b10 E#
b10 G#
12
03
14
05
1F
#1800
0F
#1900
1D#
b1100001010 A
b1100001010 !"
b1100001010 p$
b1000000110 B
b1000000110 ""
b1000000110 o$
b100000100 C
b100000100 #"
b100000100 n$
b11 D
b11 $"
b11 <#
b11 I#
b11 m$
02
13
04
15
1F
#2000
0F
#2100
0D#
b11 >#
b11 E#
b11 G#
12
03
14
05
1F
#2200
0F
#2300
1D#
b1100001011 A
b1100001011 !"
b1100001011 p$
b1000000111 B
b1000000111 ""
b1000000111 o$
b100000101 C
b100000101 #"
b100000101 n$
b100 D
b100 $"
b100 <#
b100 I#
b100 m$
02
13
04
15
1F
#2400
0F
#2500
0D#
b100 >#
b100 E#
b100 G#
12
03
14
05
1F
#2600
0F
#2700
1D#
b1100001100 A
b1100001100 !"
b1100001100 p$
b1000001000 B
b1000001000 ""
b1000001000 o$
b100000110 C
b100000110 #"
b100000110 n$
b101 D
b101 $"
b101 <#
b101 I#
b101 m$
02
13
04
15
1F
#2800
0F
#2900
0D#
b101 >#
b101 E#
b101 G#
12
03
14
05
1F
#3000
0F
#3100
1D#
b1100001101 A
b1100001101 !"
b1100001101 p$
b1000001001 B
b1000001001 ""
b1000001001 o$
b100000111 C
b100000111 #"
b100000111 n$
b110 D
b110 $"
b110 <#
b110 I#
b110 m$
02
13
04
15
1F
#3200
0F
#3300
10"
b110 >#
b110 E#
b110 G#
b0 A
b0 !"
b0 p$
b0 B
b0 ""
b0 o$
b0 C
b0 #"
b0 n$
b0 D
b0 $"
b0 <#
b0 I#
b0 m$
1F
#3400
0F
#3500
1F
#3600
0F
#3700
1F
#3800
0F
#3900
19
1F
#4000
0F
#4100
18
09
1F
#4200
0F
#4300
08
1F
#4400
0F
#4500
1F
#4600
0F
#4700
1F
#4800
0F
#4900
1F
#5000
0F
#5100
1F
#5200
0F
#5300
1F
#5400
0F
#5500
1F
#5600
0F
#5700
17
1F
#5800
0F
#5900
07
1F
#6000
0F
#6100
1F
#6200
0F
#6300
1F
#6400
0F
#6500
1F
#6600
0F
#6700
1F
#6800
0F
#6900
1F
#7000
0F
#7100
1F
#7200
0F
#7300
b1100000001 A
b1100000001 !"
b1100000001 p$
b1000000001 B
b1000000001 ""
b1000000001 o$
b100000001 C
b100000001 #"
b100000001 n$
b1 D
b1 $"
b1 <#
b1 I#
b1 m$
12
14
1F
#7400
0F
#7500
b1100000010 A
b1100000010 !"
b1100000010 p$
b1000000010 B
b1000000010 ""
b1000000010 o$
b100000010 C
b100000010 #"
b100000010 n$
b10 D
b10 $"
b10 <#
b10 I#
b10 m$
17
18
19
b111 >#
b111 E#
b111 G#
1F
#7600
0F
#7700
0D#
b1000 >#
b0 E#
b0 G#
b1100000011 A
b1100000011 !"
b1100000011 p$
b1000000011 B
b1000000011 ""
b1000000011 o$
b100000011 C
b100000011 #"
b100000011 n$
b11 D
b11 $"
b11 <#
b11 I#
b11 m$
1F
#7800
0F
#7900
b1100000100 A
b1100000100 !"
b1100000100 p$
b1000000100 B
b1000000100 ""
b1000000100 o$
b100000100 C
b100000100 #"
b100000100 n$
b100 D
b100 $"
b100 <#
b100 I#
b100 m$
1F
#8000
0F
#8100
b1100000101 A
b1100000101 !"
b1100000101 p$
b1000000101 B
b1000000101 ""
b1000000101 o$
b100000101 C
b100000101 #"
b100000101 n$
b101 D
b101 $"
b101 <#
b101 I#
b101 m$
1F
#8200
0F
#8300
b1100000110 A
b1100000110 !"
b1100000110 p$
b1000000110 B
b1000000110 ""
b1000000110 o$
b100000110 C
b100000110 #"
b100000110 n$
b110 D
b110 $"
b110 <#
b110 I#
b110 m$
1F
#8400
0F
#8500
b1100000111 A
b1100000111 !"
b1100000111 p$
b1000000111 B
b1000000111 ""
b1000000111 o$
b100000111 C
b100000111 #"
b100000111 n$
b111 D
b111 $"
b111 <#
b111 I#
b111 m$
1F
#8600
0F
#8700
b1100001000 A
b1100001000 !"
b1100001000 p$
b1000001000 B
b1000001000 ""
b1000001000 o$
b100001000 C
b100001000 #"
b100001000 n$
b1000 D
b1000 $"
b1000 <#
b1000 I#
b1000 m$
1F
#8800
0F
#8900
1F
#9000
0F
#9100
16
b0 A
b0 !"
b0 p$
b0 B
b0 ""
b0 o$
b0 C
b0 #"
b0 n$
b0 D
b0 $"
b0 <#
b0 I#
b0 m$
1F
#9200
0F
#9300
1F
#9400
0F
#9500
06
07
08
09
1F
#9600
0F
#9700
1F
#9800
0F
#9900
1F
#10000
0F
#10100
1F
#10200
0F
#10300
1F
#10400
0F
#10500
1F
#10600
0F
#10700
1F
#10800
0F
#10900
1F
#11000
0F
#11100
1F
#11200
0F
#11300
1F
#11400
0F
#11500
16
19
1F
#11600
0F
#11700
1F
#11800
0F
#11900
1F
#12000
0F
#12100
1F
#12200
0F
#12300
1F
#12400
0F
#12500
1F
#12600
0F
#12700
1F
#12800
0F
#12900
1F
#13000
0F
#13100
1F
#13200
0F
#13300
1F
#13400
0F
#13500
1F
#13600
0F
#13700
1F
#13800
0F
#13900
1F
#14000
0F
#14100
06
18
1F
#14200
0F
#14300
1F
#14400
0F
#14500
1F
#14600
0F
#14700
1F
#14800
0F
#14900
1F
#15000
0F
#15100
1F
#15200
0F
#15300
1F
#15400
0F
#15500
1F
#15600
0F
#15700
1F
#15800
0F
#15900
1F
#16000
0F
#16100
1F
#16200
0F
#16300
1F
#16400
0F
#16500
1F
#16600
0F
#16700
17
1F
#16800
0F
#16900
1F
#17000
0F
#17100
1F
#17200
0F
#17300
1F
#17400
0F
#17500
1F
#17600
0F
#17700
1F
#17800
0F
#17900
1F
#18000
0F
#18100
1F
#18200
0F
#18300
1F
#18400
0F
#18500
1F
#18600
0F
#18700
1F
#18800
0F
#18900
1F
#19000
0F
#19100
1F
#19200
0F
#19300
16
1F
#19400
0F
#19500
1F
#19600
0F
#19700
1F
#19800
0F
#19900
1F
#20000
0F
#20100
1F
#20200
0F
#20300
1F
#20400
0F
#20500
1F
#20600
0F
#20700
1F
#20800
0F
#20900
1F
#21000
0F
#21100
1F
#21200
0F
#21300
b100 A
b100 !"
b100 p$
b11 B
b11 ""
b11 o$
b10 C
b10 #"
b10 n$
b1 D
b1 $"
b1 <#
b1 I#
b1 m$
06
07
08
09
1F
#21400
0F
#21500
b0 A
b0 !"
b0 p$
b0 B
b0 ""
b0 o$
b0 C
b0 #"
b0 n$
b0 D
b0 $"
b0 <#
b0 I#
b0 m$
1F
#21600
0F
#21700
1F
#21800
0F
#21900
1F
#22000
0F
#22100
1F
#22200
0F
#22300
b100000100 A
b100000100 !"
b100000100 p$
b100000011 B
b100000011 ""
b100000011 o$
b100000010 C
b100000010 #"
b100000010 n$
b100000001 D
b100000001 $"
b100000001 <#
b100000001 I#
b100000001 m$
1F
#22400
0F
#22500
b0 A
b0 !"
b0 p$
b0 B
b0 ""
b0 o$
b0 C
b0 #"
b0 n$
b0 D
b0 $"
b0 <#
b0 I#
b0 m$
1F
#22600
0F
#22700
1F
#22800
0F
#22900
1F
#23000
0F
#23100
1F
#23200
0F
#23300
b1000000100 A
b1000000100 !"
b1000000100 p$
b1000000011 B
b1000000011 ""
b1000000011 o$
b1000000010 C
b1000000010 #"
b1000000010 n$
b1000000001 D
b1000000001 $"
b1000000001 <#
b1000000001 I#
b1000000001 m$
1F
#23400
0F
#23500
b0 A
b0 !"
b0 p$
b0 B
b0 ""
b0 o$
b0 C
b0 #"
b0 n$
b0 D
b0 $"
b0 <#
b0 I#
b0 m$
1F
#23600
0F
#23700
1F
#23800
0F
#23900
1F
#24000
0F
#24100
1F
#24200
0F
#24300
1F
#24400
0F
#24500
1F
#24600
0F
#24700
b1100000100 A
b1100000100 !"
b1100000100 p$
b1100000011 B
b1100000011 ""
b1100000011 o$
b1100000010 C
b1100000010 #"
b1100000010 n$
b1100000001 D
b1100000001 $"
b1100000001 <#
b1100000001 I#
b1100000001 m$
1F
#24800
0F
#24900
b0 A
b0 !"
b0 p$
b0 B
b0 ""
b0 o$
b0 C
b0 #"
b0 n$
b0 D
b0 $"
b0 <#
b0 I#
b0 m$
1F
#25000
0F
#25100
1F
#25200
0F
#25300
1F
#25400
0F
#25500
1F
#25600
0F
#25700
1F
#25800
0F
#25900
1F
#26000
0F
#26100
1F
#26200
0F
#26300
1F
#26400
0F
#26500
1F
#26600
0F
#26700
1F
#26800
0F
#26900
1F
#27000
0F
#27100
1F
#27200
0F
#27300
1F
#27400
0F
#27500
1F
#27600
0F
#27700
1F
#27800
0F
#27900
1F
#28000
0F
#28100
1F
#28200
0F
#28300
1F
#28400
0F
#28500
1F
#28600
0F
#28700
19
1F
#28800
0F
#28900
1F
#29000
0F
#29100
1F
#29200
0F
#29300
1F
#29400
0F
#29500
1F
#29600
0F
#29700
18
1F
#29800
0F
#29900
1F
#30000
0F
#30100
1F
#30200
0F
#30300
1F
#30400
0F
#30500
1F
#30600
0F
#30700
17
1F
#30800
0F
#30900
1F
#31000
0F
#31100
1F
#31200
0F
#31300
1F
#31400
0F
#31500
1F
#31600
0F
#31700
16
1F
#31800
0F
#31900
1F
#32000
0F
#32100
1F
#32200
0F
#32300
1F
#32400
0F
#32500
1F
#32600
0F
#32700
1F
#32800
0F
#32900
1F
#33000
0F
#33100
1F
#33200
0F
#33300
1F
#33400
0F
#33500
1F
#33600
0F
#33700
1F
#33800
0F
#33900
11
1F
#34000
0F
#34100
b1 ;
b1 q
b1 3"
b1 q$
1F
#34200
0F
#34300
b10 ;
b10 q
b10 3"
b10 q$
1F
#34400
0F
#34500
b11 ;
b11 q
b11 3"
b11 q$
1F
#34600
0F
#34700
1F
#34800
0F
#34900
1F
#35000
0F
#35100
1F
#35200
0F
#35300
1F
#35350
