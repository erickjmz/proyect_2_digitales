$date
	Thu Nov 25 18:06:58 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module BancoPruebas $end
$var wire 5 ! contador_e [4:0] $end
$var wire 12 " data_out0_e [11:0] $end
$var wire 12 # data_out1_e [11:0] $end
$var wire 12 $ data_out2_e [11:0] $end
$var wire 12 % data_out3_e [11:0] $end
$var wire 1 & valid_4 $end
$var wire 1 ' valid_5 $end
$var wire 1 ( valid_6 $end
$var wire 1 ) valid_7 $end
$var wire 1 * valid_e $end
$var wire 1 + valid_c $end
$var wire 1 , valid_3 $end
$var wire 1 - valid_2 $end
$var wire 1 . valid_1 $end
$var wire 1 / valid_0 $end
$var wire 1 0 reset $end
$var wire 1 1 req $end
$var wire 1 2 push_in3 $end
$var wire 1 3 push_in2 $end
$var wire 1 4 push_in1 $end
$var wire 1 5 push_in0 $end
$var wire 1 6 pop_in3 $end
$var wire 1 7 pop_in2 $end
$var wire 1 8 pop_in1 $end
$var wire 1 9 pop_in0 $end
$var wire 1 : init $end
$var wire 3 ; idx [2:0] $end
$var wire 1 < idle $end
$var wire 12 = data_out3_c [11:0] $end
$var wire 12 > data_out2_c [11:0] $end
$var wire 12 ? data_out1_c [11:0] $end
$var wire 12 @ data_out0_c [11:0] $end
$var wire 12 A data_in3 [11:0] $end
$var wire 12 B data_in2 [11:0] $end
$var wire 12 C data_in1 [11:0] $end
$var wire 12 D data_in0 [11:0] $end
$var wire 5 E contador_c [4:0] $end
$var wire 1 F clk $end
$var wire 2 G class [1:0] $end
$var wire 3 H Umbral_bajo [2:0] $end
$var wire 3 I Umbral_alto [2:0] $end
$scope module TL_conductual $end
$var wire 1 J almost_empty $end
$var wire 1 K almost_full $end
$var wire 1 L almost_full3 $end
$var wire 1 M empty7 $end
$var wire 1 N pop_in4 $end
$var wire 1 O pop_wire4 $end
$var wire 12 P wireX [11:0] $end
$var wire 1 Q valid_7 $end
$var wire 1 R valid_6 $end
$var wire 1 S valid_5 $end
$var wire 1 T valid_4 $end
$var wire 1 , valid_3 $end
$var wire 1 - valid_2 $end
$var wire 1 . valid_1 $end
$var wire 1 / valid_0 $end
$var wire 1 + valid $end
$var wire 3 U umbral_superior [2:0] $end
$var wire 3 V umbral_inferior [2:0] $end
$var wire 4 W state [3:0] $end
$var wire 1 0 reset $end
$var wire 1 1 req $end
$var wire 1 2 push_in3 $end
$var wire 1 3 push_in2 $end
$var wire 1 4 push_in1 $end
$var wire 1 5 push_in0 $end
$var wire 1 X push $end
$var wire 1 Y pop_wire3 $end
$var wire 1 Z pop_wire2 $end
$var wire 1 [ pop_wire1 $end
$var wire 1 \ pop_wire0 $end
$var wire 1 6 pop_in3 $end
$var wire 1 7 pop_in2 $end
$var wire 1 8 pop_in1 $end
$var wire 1 9 pop_in0 $end
$var wire 12 ] outMUX [11:0] $end
$var wire 12 ^ outFIFO_in4 [11:0] $end
$var wire 12 _ outFIFO_in3 [11:0] $end
$var wire 12 ` outFIFO_in2 [11:0] $end
$var wire 12 a outFIFO_in1 [11:0] $end
$var wire 12 b outFIFO_in0 [11:0] $end
$var wire 12 c outDEMUXB3 [11:0] $end
$var wire 12 d outDEMUXB2 [11:0] $end
$var wire 12 e outDEMUXB1 [11:0] $end
$var wire 12 f outDEMUXB0 [11:0] $end
$var wire 12 g outDEMUXA3 [11:0] $end
$var wire 12 h outDEMUXA2 [11:0] $end
$var wire 12 i outDEMUXA1 [11:0] $end
$var wire 12 j outDEMUXA0 [11:0] $end
$var wire 1 : init $end
$var wire 3 k idx [2:0] $end
$var wire 1 < idle $end
$var wire 1 l empty8 $end
$var wire 1 m empty6 $end
$var wire 1 n empty5 $end
$var wire 1 o empty4 $end
$var wire 1 p empty3 $end
$var wire 1 q empty2 $end
$var wire 1 r empty1 $end
$var wire 1 s empty0 $end
$var wire 10 t empties [9:0] $end
$var wire 12 u data_out3 [11:0] $end
$var wire 12 v data_out2 [11:0] $end
$var wire 12 w data_out1 [11:0] $end
$var wire 12 x data_out0 [11:0] $end
$var wire 12 y data_in3 [11:0] $end
$var wire 12 z data_in2 [11:0] $end
$var wire 12 { data_in1 [11:0] $end
$var wire 12 | data_in0 [11:0] $end
$var wire 5 } contador [4:0] $end
$var wire 1 F clk $end
$var wire 2 ~ class [1:0] $end
$var wire 1 !" almost_full2 $end
$var wire 1 "" almost_full1 $end
$var wire 1 #" almost_full0 $end
$var wire 3 $" Umbral_bajo [2:0] $end
$var wire 3 %" Umbral_alto [2:0] $end
$scope module Contadores $end
$var wire 1 N pop_4 $end
$var wire 1 0 reset_L $end
$var wire 1 6 pop_3 $end
$var wire 1 7 pop_2 $end
$var wire 1 8 pop_1 $end
$var wire 1 9 pop_0 $end
$var wire 3 &" idx [2:0] $end
$var wire 1 < idle $end
$var wire 1 F clk $end
$var reg 5 '" data_0 [4:0] $end
$var reg 5 (" data_1 [4:0] $end
$var reg 5 )" data_2 [4:0] $end
$var reg 5 *" data_3 [4:0] $end
$var reg 5 +" data_4 [4:0] $end
$var reg 5 ," data_out [4:0] $end
$var reg 1 + valid $end
$upscope $end
$scope module DEMUX1 $end
$var wire 1 0 reset_L $end
$var wire 12 -" data_in [11:0] $end
$var wire 1 F clk $end
$var wire 2 ." class [1:0] $end
$var reg 12 /" data_out0 [11:0] $end
$var reg 12 0" data_out1 [11:0] $end
$var reg 12 1" data_out2 [11:0] $end
$var reg 12 2" data_out3 [11:0] $end
$var reg 1 / valid_0 $end
$var reg 1 . valid_1 $end
$var reg 1 - valid_2 $end
$var reg 1 , valid_3 $end
$upscope $end
$scope module DEMUX2 $end
$var wire 1 0 reset_L $end
$var wire 12 3" data_in [11:0] $end
$var wire 1 F clk $end
$var wire 2 4" class [1:0] $end
$var reg 12 5" data_out0 [11:0] $end
$var reg 12 6" data_out1 [11:0] $end
$var reg 12 7" data_out2 [11:0] $end
$var reg 12 8" data_out3 [11:0] $end
$var reg 1 T valid_0 $end
$var reg 1 S valid_1 $end
$var reg 1 R valid_2 $end
$var reg 1 Q valid_3 $end
$upscope $end
$scope module FIFO_in0 $end
$var wire 12 9" data_in [11:0] $end
$var wire 3 :" um_sup [2:0] $end
$var wire 3 ;" um_inf [2:0] $end
$var wire 4 <" state [3:0] $end
$var wire 1 5 push $end
$var wire 1 \ pop $end
$var wire 12 =" data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 >" alm_empty $end
$var reg 1 ?" alm_full $end
$var reg 4 @" contador [3:0] $end
$var reg 1 s empty $end
$var reg 1 A" full $end
$var reg 3 B" low_space [2:0] $end
$var reg 3 C" much_space [2:0] $end
$var reg 3 D" rd_ptr [2:0] $end
$var reg 1 E" re_a $end
$var reg 1 F" we_a $end
$var reg 3 G" wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 H" addr_ra [2:0] $end
$var wire 3 I" addr_wa [2:0] $end
$var wire 12 J" data_a [11:0] $end
$var wire 1 E" re_a $end
$var wire 1 F" we_a $end
$var wire 4 K" state [3:0] $end
$var wire 1 F clk $end
$var reg 12 L" q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_in1 $end
$var wire 12 M" data_in [11:0] $end
$var wire 3 N" um_sup [2:0] $end
$var wire 3 O" um_inf [2:0] $end
$var wire 4 P" state [3:0] $end
$var wire 1 4 push $end
$var wire 1 [ pop $end
$var wire 12 Q" data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 R" alm_empty $end
$var reg 1 S" alm_full $end
$var reg 4 T" contador [3:0] $end
$var reg 1 r empty $end
$var reg 1 U" full $end
$var reg 3 V" low_space [2:0] $end
$var reg 3 W" much_space [2:0] $end
$var reg 3 X" rd_ptr [2:0] $end
$var reg 1 Y" re_a $end
$var reg 1 Z" we_a $end
$var reg 3 [" wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 \" addr_ra [2:0] $end
$var wire 3 ]" addr_wa [2:0] $end
$var wire 12 ^" data_a [11:0] $end
$var wire 1 Y" re_a $end
$var wire 1 Z" we_a $end
$var wire 4 _" state [3:0] $end
$var wire 1 F clk $end
$var reg 12 `" q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_in2 $end
$var wire 12 a" data_in [11:0] $end
$var wire 3 b" um_sup [2:0] $end
$var wire 3 c" um_inf [2:0] $end
$var wire 4 d" state [3:0] $end
$var wire 1 3 push $end
$var wire 1 Z pop $end
$var wire 12 e" data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 f" alm_empty $end
$var reg 1 g" alm_full $end
$var reg 4 h" contador [3:0] $end
$var reg 1 q empty $end
$var reg 1 i" full $end
$var reg 3 j" low_space [2:0] $end
$var reg 3 k" much_space [2:0] $end
$var reg 3 l" rd_ptr [2:0] $end
$var reg 1 m" re_a $end
$var reg 1 n" we_a $end
$var reg 3 o" wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 p" addr_ra [2:0] $end
$var wire 3 q" addr_wa [2:0] $end
$var wire 12 r" data_a [11:0] $end
$var wire 1 m" re_a $end
$var wire 1 n" we_a $end
$var wire 4 s" state [3:0] $end
$var wire 1 F clk $end
$var reg 12 t" q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_in3 $end
$var wire 12 u" data_in [11:0] $end
$var wire 3 v" um_sup [2:0] $end
$var wire 3 w" um_inf [2:0] $end
$var wire 4 x" state [3:0] $end
$var wire 1 2 push $end
$var wire 1 Y pop $end
$var wire 12 y" data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 z" alm_empty $end
$var reg 1 {" alm_full $end
$var reg 4 |" contador [3:0] $end
$var reg 1 p empty $end
$var reg 1 }" full $end
$var reg 3 ~" low_space [2:0] $end
$var reg 3 !# much_space [2:0] $end
$var reg 3 "# rd_ptr [2:0] $end
$var reg 1 ## re_a $end
$var reg 1 $# we_a $end
$var reg 3 %# wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 &# addr_ra [2:0] $end
$var wire 3 '# addr_wa [2:0] $end
$var wire 12 (# data_a [11:0] $end
$var wire 1 ## re_a $end
$var wire 1 $# we_a $end
$var wire 4 )# state [3:0] $end
$var wire 1 F clk $end
$var reg 12 *# q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_in4 $end
$var wire 1 O pop $end
$var wire 3 +# um_sup [2:0] $end
$var wire 3 ,# um_inf [2:0] $end
$var wire 4 -# state [3:0] $end
$var wire 1 5 push $end
$var wire 12 .# data_out [11:0] $end
$var wire 12 /# data_in [11:0] $end
$var wire 1 F clk $end
$var reg 1 0# alm_empty $end
$var reg 1 1# alm_full $end
$var reg 4 2# contador [3:0] $end
$var reg 1 l empty $end
$var reg 1 3# full $end
$var reg 3 4# low_space [2:0] $end
$var reg 3 5# much_space [2:0] $end
$var reg 3 6# rd_ptr [2:0] $end
$var reg 1 7# re_a $end
$var reg 1 8# we_a $end
$var reg 3 9# wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 :# addr_ra [2:0] $end
$var wire 3 ;# addr_wa [2:0] $end
$var wire 1 7# re_a $end
$var wire 1 8# we_a $end
$var wire 4 <# state [3:0] $end
$var wire 12 =# data_a [11:0] $end
$var wire 1 F clk $end
$var reg 12 ># q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_out0 $end
$var wire 12 ?# data_in [11:0] $end
$var wire 3 @# um_sup [2:0] $end
$var wire 3 A# um_inf [2:0] $end
$var wire 4 B# state [3:0] $end
$var wire 1 X push $end
$var wire 1 9 pop $end
$var wire 12 C# data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 D# alm_empty $end
$var reg 1 #" alm_full $end
$var reg 4 E# contador [3:0] $end
$var reg 1 o empty $end
$var reg 1 F# full $end
$var reg 3 G# low_space [2:0] $end
$var reg 3 H# much_space [2:0] $end
$var reg 3 I# rd_ptr [2:0] $end
$var reg 1 J# re_a $end
$var reg 1 K# we_a $end
$var reg 3 L# wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 M# addr_ra [2:0] $end
$var wire 3 N# addr_wa [2:0] $end
$var wire 12 O# data_a [11:0] $end
$var wire 1 J# re_a $end
$var wire 1 K# we_a $end
$var wire 4 P# state [3:0] $end
$var wire 1 F clk $end
$var reg 12 Q# q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_out1 $end
$var wire 12 R# data_in [11:0] $end
$var wire 3 S# um_sup [2:0] $end
$var wire 3 T# um_inf [2:0] $end
$var wire 4 U# state [3:0] $end
$var wire 1 X push $end
$var wire 1 8 pop $end
$var wire 12 V# data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 W# alm_empty $end
$var reg 1 "" alm_full $end
$var reg 4 X# contador [3:0] $end
$var reg 1 n empty $end
$var reg 1 Y# full $end
$var reg 3 Z# low_space [2:0] $end
$var reg 3 [# much_space [2:0] $end
$var reg 3 \# rd_ptr [2:0] $end
$var reg 1 ]# re_a $end
$var reg 1 ^# we_a $end
$var reg 3 _# wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 `# addr_ra [2:0] $end
$var wire 3 a# addr_wa [2:0] $end
$var wire 12 b# data_a [11:0] $end
$var wire 1 ]# re_a $end
$var wire 1 ^# we_a $end
$var wire 4 c# state [3:0] $end
$var wire 1 F clk $end
$var reg 12 d# q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_out2 $end
$var wire 12 e# data_in [11:0] $end
$var wire 3 f# um_sup [2:0] $end
$var wire 3 g# um_inf [2:0] $end
$var wire 4 h# state [3:0] $end
$var wire 1 X push $end
$var wire 1 7 pop $end
$var wire 12 i# data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 j# alm_empty $end
$var reg 1 !" alm_full $end
$var reg 4 k# contador [3:0] $end
$var reg 1 m empty $end
$var reg 1 l# full $end
$var reg 3 m# low_space [2:0] $end
$var reg 3 n# much_space [2:0] $end
$var reg 3 o# rd_ptr [2:0] $end
$var reg 1 p# re_a $end
$var reg 1 q# we_a $end
$var reg 3 r# wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 s# addr_ra [2:0] $end
$var wire 3 t# addr_wa [2:0] $end
$var wire 12 u# data_a [11:0] $end
$var wire 1 p# re_a $end
$var wire 1 q# we_a $end
$var wire 4 v# state [3:0] $end
$var wire 1 F clk $end
$var reg 12 w# q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_out3 $end
$var wire 12 x# data_in [11:0] $end
$var wire 3 y# um_sup [2:0] $end
$var wire 3 z# um_inf [2:0] $end
$var wire 4 {# state [3:0] $end
$var wire 1 X push $end
$var wire 1 6 pop $end
$var wire 12 |# data_out [11:0] $end
$var wire 1 F clk $end
$var reg 1 }# alm_empty $end
$var reg 1 ~# alm_full $end
$var reg 4 !$ contador [3:0] $end
$var reg 1 "$ empty $end
$var reg 1 #$ full $end
$var reg 3 $$ low_space [2:0] $end
$var reg 3 %$ much_space [2:0] $end
$var reg 3 &$ rd_ptr [2:0] $end
$var reg 1 '$ re_a $end
$var reg 1 ($ we_a $end
$var reg 3 )$ wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 *$ addr_ra [2:0] $end
$var wire 3 +$ addr_wa [2:0] $end
$var wire 12 ,$ data_a [11:0] $end
$var wire 1 '$ re_a $end
$var wire 1 ($ we_a $end
$var wire 4 -$ state [3:0] $end
$var wire 1 F clk $end
$var reg 12 .$ q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FIFO_out4 $end
$var wire 3 /$ um_sup [2:0] $end
$var wire 3 0$ um_inf [2:0] $end
$var wire 4 1$ state [3:0] $end
$var wire 1 X push $end
$var wire 1 9 pop $end
$var wire 12 2$ data_out [11:0] $end
$var wire 12 3$ data_in [11:0] $end
$var wire 1 F clk $end
$var reg 1 4$ alm_empty $end
$var reg 1 5$ alm_full $end
$var reg 4 6$ contador [3:0] $end
$var reg 1 7$ empty $end
$var reg 1 8$ full $end
$var reg 3 9$ low_space [2:0] $end
$var reg 3 :$ much_space [2:0] $end
$var reg 3 ;$ rd_ptr [2:0] $end
$var reg 1 <$ re_a $end
$var reg 1 =$ we_a $end
$var reg 3 >$ wr_ptr [2:0] $end
$scope module memory $end
$var wire 3 ?$ addr_ra [2:0] $end
$var wire 3 @$ addr_wa [2:0] $end
$var wire 1 <$ re_a $end
$var wire 1 =$ we_a $end
$var wire 4 A$ state [3:0] $end
$var wire 12 B$ data_a [11:0] $end
$var wire 1 F clk $end
$var reg 12 C$ q_a [11:0] $end
$upscope $end
$upscope $end
$scope module FSM $end
$var wire 1 0 reset $end
$var wire 1 : init $end
$var wire 10 D$ empties [9:0] $end
$var wire 1 F clk $end
$var wire 3 E$ Low_Threshold [2:0] $end
$var wire 3 F$ High_Threshold [2:0] $end
$var reg 4 G$ Estado [3:0] $end
$var reg 4 H$ ProximoEstado [3:0] $end
$var reg 3 I$ inf_Threshold [2:0] $end
$var reg 4 J$ state [3:0] $end
$var reg 3 K$ sup_Threshold [2:0] $end
$upscope $end
$scope module MUX $end
$var wire 12 L$ data_in0 [11:0] $end
$var wire 12 M$ data_in1 [11:0] $end
$var wire 12 N$ data_in2 [11:0] $end
$var wire 12 O$ data_in3 [11:0] $end
$var wire 1 0 reset_L $end
$var wire 1 F clk $end
$var reg 12 P$ data_out [11:0] $end
$var reg 4 Q$ hola [3:0] $end
$upscope $end
$scope module arbitro $end
$var wire 1 #" almost_full0 $end
$var wire 1 "" almost_full1 $end
$var wire 1 !" almost_full2 $end
$var wire 1 L almost_full3 $end
$var wire 1 s empty0_orange $end
$var wire 1 o empty0_purple $end
$var wire 1 r empty1_orange $end
$var wire 1 n empty1_purple $end
$var wire 1 q empty2_orange $end
$var wire 1 m empty2_purple $end
$var wire 1 p empty3_orange $end
$var wire 1 M empty3_purple $end
$var wire 4 R$ state [3:0] $end
$var wire 1 F clk $end
$var reg 10 S$ empties [9:0] $end
$var reg 1 \ pop0 $end
$var reg 1 [ pop1 $end
$var reg 1 Z pop2 $end
$var reg 1 Y pop3 $end
$var reg 1 X push $end
$upscope $end
$upscope $end
$scope module testbench $end
$var wire 5 T$ contador_c [4:0] $end
$var wire 5 U$ contador_e [4:0] $end
$var wire 12 V$ data_out0_c [11:0] $end
$var wire 12 W$ data_out0_e [11:0] $end
$var wire 12 X$ data_out1_c [11:0] $end
$var wire 12 Y$ data_out1_e [11:0] $end
$var wire 12 Z$ data_out2_c [11:0] $end
$var wire 12 [$ data_out2_e [11:0] $end
$var wire 12 \$ data_out3_c [11:0] $end
$var wire 12 ]$ data_out3_e [11:0] $end
$var wire 1 / valid_0 $end
$var wire 1 . valid_1 $end
$var wire 1 - valid_2 $end
$var wire 1 , valid_3 $end
$var wire 1 & valid_4 $end
$var wire 1 ' valid_5 $end
$var wire 1 ( valid_6 $end
$var wire 1 ) valid_7 $end
$var wire 1 + valid_c $end
$var wire 1 * valid_e $end
$var reg 3 ^$ Umbral_alto [2:0] $end
$var reg 3 _$ Umbral_bajo [2:0] $end
$var reg 2 `$ class [1:0] $end
$var reg 1 F clk $end
$var reg 12 a$ data_in0 [11:0] $end
$var reg 12 b$ data_in1 [11:0] $end
$var reg 12 c$ data_in2 [11:0] $end
$var reg 12 d$ data_in3 [11:0] $end
$var reg 1 < idle $end
$var reg 3 e$ idx [2:0] $end
$var reg 1 : init $end
$var reg 1 9 pop_in0 $end
$var reg 1 8 pop_in1 $end
$var reg 1 7 pop_in2 $end
$var reg 1 6 pop_in3 $end
$var reg 1 f$ pop_in4 $end
$var reg 1 5 push_in0 $end
$var reg 1 4 push_in1 $end
$var reg 1 3 push_in2 $end
$var reg 1 2 push_in3 $end
$var reg 1 1 req $end
$var reg 1 0 reset $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0f$
b0 e$
b0 d$
b0 c$
b0 b$
b0 a$
bx `$
b0 _$
b0 ^$
bz ]$
bx \$
bz [$
bx Z$
bz Y$
bx X$
bz W$
bx V$
bz U$
bx T$
b0 S$
b1 R$
bx Q$
bx P$
bx O$
bx N$
bx M$
bx L$
bx K$
b1 J$
bx I$
b0 H$
bx G$
b0 F$
b0 E$
b0 D$
bx C$
bx B$
b1 A$
bx @$
bx ?$
bx >$
0=$
0<$
bx ;$
bx :$
bx 9$
x8$
x7$
bx 6$
05$
04$
bx 3$
bx 2$
b1 1$
bx 0$
bx /$
bx .$
b1 -$
bx ,$
bx +$
bx *$
bx )$
0($
0'$
bx &$
bx %$
bx $$
x#$
x"$
bx !$
0~#
0}#
bx |#
b1 {#
bx z#
bx y#
bx x#
bx w#
b1 v#
bx u#
bx t#
bx s#
bx r#
0q#
0p#
bx o#
bx n#
bx m#
xl#
bx k#
0j#
bx i#
b1 h#
bx g#
bx f#
bx e#
bx d#
b1 c#
bx b#
bx a#
bx `#
bx _#
0^#
0]#
bx \#
bx [#
bx Z#
xY#
bx X#
0W#
bx V#
b1 U#
bx T#
bx S#
bx R#
bx Q#
b1 P#
bx O#
bx N#
bx M#
bx L#
0K#
0J#
bx I#
bx H#
bx G#
xF#
bx E#
0D#
bx C#
b1 B#
bx A#
bx @#
bx ?#
bx >#
b0 =#
b1 <#
bx ;#
bx :#
bx 9#
08#
07#
bx 6#
bx 5#
bx 4#
x3#
bx 2#
01#
00#
b0 /#
bx .#
b1 -#
bx ,#
bx +#
bx *#
b1 )#
bx (#
bx '#
bx &#
bx %#
0$#
0##
bx "#
bx !#
bx ~"
x}"
bx |"
0{"
0z"
bx y"
b1 x"
bx w"
bx v"
bx u"
bx t"
b1 s"
bx r"
bx q"
bx p"
bx o"
0n"
0m"
bx l"
bx k"
bx j"
xi"
bx h"
0g"
0f"
bx e"
b1 d"
bx c"
bx b"
bx a"
bx `"
b1 _"
bx ^"
bx ]"
bx \"
bx ["
0Z"
0Y"
bx X"
bx W"
bx V"
xU"
bx T"
0S"
0R"
bx Q"
b1 P"
bx O"
bx N"
bx M"
bx L"
b1 K"
bx J"
bx I"
bx H"
bx G"
0F"
0E"
bx D"
bx C"
bx B"
xA"
bx @"
0?"
0>"
bx ="
b1 <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
b0 &"
b0 %"
b0 $"
0#"
0""
0!"
bx ~
bx }
b0 |
b0 {
b0 z
b0 y
bx x
bx w
bx v
bx u
b0 t
xs
xr
xq
xp
xo
xn
xm
xl
b0 k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
0\
0[
0Z
0Y
xX
b1 W
bx V
bx U
xT
xS
xR
xQ
bx P
zO
zN
xM
0L
0K
0J
b0 I
b0 H
bx G
0F
bx E
b0 D
b0 C
b0 B
b0 A
bx @
bx ?
bx >
bx =
0<
b0 ;
0:
09
08
07
06
05
04
03
02
01
10
x/
x.
x-
x,
x+
z*
z)
z(
z'
z&
bz %
bz $
bz #
bz "
bz !
$end
#100
b0 b
b0 ="
b0 L"
b0 L$
b0 C"
b0 B"
b0 @"
b0 D"
b0 H"
b0 G"
b0 I"
b0 a
b0 Q"
b0 `"
b0 M$
b0 W"
b0 V"
b0 T"
b0 X"
b0 \"
b0 ["
b0 ]"
b0 `
b0 e"
b0 t"
b0 N$
b0 k"
b0 j"
b0 h"
b0 l"
b0 p"
b0 o"
b0 q"
b0 _
b0 y"
b0 *#
b0 O$
b0 !#
b0 ~"
b0 |"
b0 "#
b0 &#
b0 %#
b0 '#
b0 ^
b0 -"
b0 .#
b0 >#
b0 5#
b0 4#
b0 2#
b0 6#
b0 :#
b0 9#
b0 ;#
b0 @
b0 x
b0 C#
b0 Q#
b0 V$
b0 H#
b0 G#
b0 E#
b0 I#
b0 M#
b0 L#
b0 N#
b0 ?
b0 w
b0 V#
b0 d#
b0 X$
b0 [#
b0 Z#
b0 X#
b0 \#
b0 `#
b0 _#
b0 a#
b0 >
b0 v
b0 i#
b0 w#
b0 Z$
b0 n#
b0 m#
b0 k#
b0 o#
b0 s#
b0 r#
b0 t#
b0 =
b0 u
b0 |#
b0 .$
b0 \$
b0 %$
b0 $$
b0 !$
b0 &$
b0 *$
b0 )$
b0 +$
b0 P
b0 3"
b0 2$
b0 C$
b0 :$
b0 9$
b0 6$
b0 ;$
b0 ?$
b0 >$
b0 @$
0+
0X
b0 V
b0 ;"
b0 O"
b0 c"
b0 w"
b0 ,#
b0 A#
b0 T#
b0 g#
b0 z#
b0 0$
b0 I$
b0 U
b0 :"
b0 N"
b0 b"
b0 v"
b0 +#
b0 @#
b0 S#
b0 f#
b0 y#
b0 /$
b0 K$
b1 G$
1:
1s
1r
1q
1p
1l
1o
1n
1m
1M
1"$
17$
1F
#200
0F
#300
b0 ]
b0 3$
b0 B$
b0 P$
b0 g
b0 2"
b0 u"
b0 (#
b0 h
b0 1"
b0 a"
b0 r"
b0 i
b0 0"
b0 M"
b0 ^"
b0 j
b0 /"
b0 9"
b0 J"
0,
0-
0.
0/
b0 c
b0 8"
b0 x#
b0 ,$
b0 d
b0 7"
b0 e#
b0 u#
b0 e
b0 6"
b0 R#
b0 b#
b0 f
b0 5"
b0 ?#
b0 O#
0Q
0R
0S
0T
b10 H$
00
1F
#400
0F
#500
1>"
1?"
1R"
1S"
1f"
1g"
1z"
1{"
10#
1K
11#
1D#
1#"
1W#
1""
1j#
1!"
1}#
1~#
1J
14$
1L
15$
b11111111 t
b11111111 D$
b11111111 S$
b100 H$
b10 W
b10 <"
b10 K"
b10 P"
b10 _"
b10 d"
b10 s"
b10 x"
b10 )#
b10 -#
b10 <#
b10 B#
b10 P#
b10 U#
b10 c#
b10 h#
b10 v#
b10 {#
b10 -$
b10 1$
b10 A$
b10 J$
b10 R$
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 E
b0 }
b0 ,"
b0 T$
b10 G$
b111 I
b111 %"
b111 F$
b111 ^$
1F
#600
0F
#700
1K#
1^#
1q#
1($
1=$
b110 I
b110 %"
b110 F$
b110 ^$
b1 H
b1 $"
b1 E$
b1 _$
b111 U
b111 :"
b111 N"
b111 b"
b111 v"
b111 +#
b111 @#
b111 S#
b111 f#
b111 y#
b111 /$
b111 K$
1X
1F
#800
0F
#900
0?"
0S"
0g"
0{"
0K
01#
0#"
0""
0!"
0~#
0L
05$
b111 B"
b111 V"
b111 j"
b111 ~"
b111 4#
b111 G#
b111 Z#
b111 m#
b111 $$
b111 9$
b1 V
b1 ;"
b1 O"
b1 c"
b1 w"
b1 ,#
b1 A#
b1 T#
b1 g#
b1 z#
b1 0$
b1 I$
b110 U
b110 :"
b110 N"
b110 b"
b110 v"
b110 +#
b110 @#
b110 S#
b110 f#
b110 y#
b110 /$
b110 K$
0:
1F
#1000
0F
#1100
1$#
1n"
1Z"
1F"
18#
b100 W
b100 <"
b100 K"
b100 P"
b100 _"
b100 d"
b100 s"
b100 x"
b100 )#
b100 -#
b100 <#
b100 B#
b100 P#
b100 U#
b100 c#
b100 h#
b100 v#
b100 {#
b100 -$
b100 1$
b100 A$
b100 J$
b100 R$
b1100001000 A
b1100001000 y
b1100001000 d$
b1000000100 B
b1000000100 z
b1000000100 c$
b100000010 C
b100000010 {
b100000010 b$
b1 D
b1 |
b1 /#
b1 =#
b1 a$
12
13
14
15
b100 G$
b1 :$
b110 9$
b1 %$
b110 $$
b1 n#
b110 m#
b1 [#
b110 Z#
b1 H#
b110 G#
b1 5#
b110 4#
b1 !#
b110 ~"
b1 k"
b110 j"
b1 W"
b110 V"
b1 C"
b110 B"
1F
#1200
0F
#1300
0n"
0F"
08#
0l
b1 2#
b1 9#
b1 ;#
03
05
1F
#1400
0F
#1500
0$#
1n"
0Z"
1F"
18#
b1100001001 A
b1100001001 y
b1100001001 d$
b1000000101 B
b1000000101 z
b1000000101 c$
b100000011 C
b100000011 {
b100000011 b$
b10 D
b10 |
b10 /#
b10 =#
b10 a$
02
13
04
15
1F
#1600
0F
#1700
xJ
00#
1$#
0n"
1Z"
0F"
08#
b10 2#
b10 9#
b10 ;#
12
03
14
05
1F
#1800
0F
#1900
0$#
1n"
0Z"
1F"
18#
b1100001010 A
b1100001010 y
b1100001010 d$
b1000000110 B
b1000000110 z
b1000000110 c$
b100000100 C
b100000100 {
b100000100 b$
b11 D
b11 |
b11 /#
b11 =#
b11 a$
02
13
04
15
1F
#2000
0F
#2100
1$#
0n"
1Z"
0F"
08#
b11 2#
b11 9#
b11 ;#
12
03
14
05
1F
#2200
0F
#2300
0$#
1n"
0Z"
1F"
18#
b1100001011 A
b1100001011 y
b1100001011 d$
b1000000111 B
b1000000111 z
b1000000111 c$
b100000101 C
b100000101 {
b100000101 b$
b100 D
b100 |
b100 /#
b100 =#
b100 a$
02
13
04
15
1F
#2400
0F
#2500
1$#
0n"
1Z"
0F"
08#
b100 2#
b100 9#
b100 ;#
12
03
14
05
1F
#2600
0F
#2700
0$#
1n"
0Z"
1F"
18#
b1100001100 A
b1100001100 y
b1100001100 d$
b1000001000 B
b1000001000 z
b1000001000 c$
b100000110 C
b100000110 {
b100000110 b$
b101 D
b101 |
b101 /#
b101 =#
b101 a$
02
13
04
15
1F
#2800
0F
#2900
1$#
0n"
1Z"
0F"
08#
b101 2#
b101 9#
b101 ;#
12
03
14
05
1F
#3000
0F
#3100
0$#
1n"
0Z"
1F"
18#
b1100001101 A
b1100001101 y
b1100001101 d$
b1000001001 B
b1000001001 z
b1000001001 c$
b100000111 C
b100000111 {
b100000111 b$
b110 D
b110 |
b110 /#
b110 =#
b110 a$
02
13
04
15
1F
#3200
0F
#3300
xK
11#
b110 2#
b110 9#
b110 ;#
b0 A
b0 y
b0 d$
b0 B
b0 z
b0 c$
b0 C
b0 {
b0 b$
b0 D
b0 |
b0 /#
b0 =#
b0 a$
1F
#3400
0F
#3500
1F
#3600
0F
#3700
1F
#3800
0F
#3900
19
1F
#4000
0F
#4100
18
09
1F
#4200
0F
#4300
08
1F
#4400
0F
#4500
1F
#4600
0F
#4700
1F
#4800
0F
#4900
1F
#5000
0F
#5100
1F
#5200
0F
#5300
1F
#5400
0F
#5500
1F
#5600
0F
#5700
17
1F
#5800
0F
#5900
07
1F
#6000
0F
#6100
1F
#6200
0F
#6300
1F
#6400
0F
#6500
1F
#6600
0F
#6700
1F
#6800
0F
#6900
1F
#7000
0F
#7100
1F
#7200
0F
#7300
1$#
1Z"
b1100000001 A
b1100000001 y
b1100000001 d$
b1000000001 B
b1000000001 z
b1000000001 c$
b100000001 C
b100000001 {
b100000001 b$
b1 D
b1 |
b1 /#
b1 =#
b1 a$
12
14
1F
#7400
0F
#7500
b1100000010 A
b1100000010 y
b1100000010 d$
b1000000010 B
b1000000010 z
b1000000010 c$
b100000010 C
b100000010 {
b100000010 b$
b10 D
b10 |
b10 /#
b10 =#
b10 a$
17
18
19
b111 2#
b111 9#
b111 ;#
1F
#7600
0F
#7700
08#
b1000 2#
b0 9#
b0 ;#
b1100000011 A
b1100000011 y
b1100000011 d$
b1000000011 B
b1000000011 z
b1000000011 c$
b100000011 C
b100000011 {
b100000011 b$
b11 D
b11 |
b11 /#
b11 =#
b11 a$
1F
#7800
0F
#7900
b1100000100 A
b1100000100 y
b1100000100 d$
b1000000100 B
b1000000100 z
b1000000100 c$
b100000100 C
b100000100 {
b100000100 b$
b100 D
b100 |
b100 /#
b100 =#
b100 a$
1F
#8000
0F
#8100
b1100000101 A
b1100000101 y
b1100000101 d$
b1000000101 B
b1000000101 z
b1000000101 c$
b100000101 C
b100000101 {
b100000101 b$
b101 D
b101 |
b101 /#
b101 =#
b101 a$
1F
#8200
0F
#8300
b1100000110 A
b1100000110 y
b1100000110 d$
b1000000110 B
b1000000110 z
b1000000110 c$
b100000110 C
b100000110 {
b100000110 b$
b110 D
b110 |
b110 /#
b110 =#
b110 a$
1F
#8400
0F
#8500
b1100000111 A
b1100000111 y
b1100000111 d$
b1000000111 B
b1000000111 z
b1000000111 c$
b100000111 C
b100000111 {
b100000111 b$
b111 D
b111 |
b111 /#
b111 =#
b111 a$
1F
#8600
0F
#8700
b1100001000 A
b1100001000 y
b1100001000 d$
b1000001000 B
b1000001000 z
b1000001000 c$
b100001000 C
b100001000 {
b100001000 b$
b1000 D
b1000 |
b1000 /#
b1000 =#
b1000 a$
1F
#8800
0F
#8900
1F
#9000
0F
#9100
16
b0 A
b0 y
b0 d$
b0 B
b0 z
b0 c$
b0 C
b0 {
b0 b$
b0 D
b0 |
b0 /#
b0 =#
b0 a$
1F
#9200
0F
#9300
1F
#9400
0F
#9500
06
07
08
09
1F
#9600
0F
#9700
1F
#9800
0F
#9900
1F
#10000
0F
#10100
1F
#10200
0F
#10300
1F
#10400
0F
#10500
1F
#10600
0F
#10700
1F
#10800
0F
#10900
1F
#11000
0F
#11100
1F
#11200
0F
#11300
1F
#11400
0F
#11500
16
19
1F
#11600
0F
#11700
1F
#11800
0F
#11900
1F
#12000
0F
#12100
1F
#12200
0F
#12300
1F
#12400
0F
#12500
1F
#12600
0F
#12700
1F
#12800
0F
#12900
1F
#13000
0F
#13100
1F
#13200
0F
#13300
1F
#13400
0F
#13500
1F
#13600
0F
#13700
1F
#13800
0F
#13900
1F
#14000
0F
#14100
06
18
1F
#14200
0F
#14300
1F
#14400
0F
#14500
1F
#14600
0F
#14700
1F
#14800
0F
#14900
1F
#15000
0F
#15100
1F
#15200
0F
#15300
1F
#15400
0F
#15500
1F
#15600
0F
#15700
1F
#15800
0F
#15900
1F
#16000
0F
#16100
1F
#16200
0F
#16300
1F
#16400
0F
#16500
1F
#16600
0F
#16700
17
1F
#16800
0F
#16900
1F
#17000
0F
#17100
1F
#17200
0F
#17300
1F
#17400
0F
#17500
1F
#17600
0F
#17700
1F
#17800
0F
#17900
1F
#18000
0F
#18100
1F
#18200
0F
#18300
1F
#18400
0F
#18500
1F
#18600
0F
#18700
1F
#18800
0F
#18900
1F
#19000
0F
#19100
1F
#19200
0F
#19300
16
1F
#19400
0F
#19500
1F
#19600
0F
#19700
1F
#19800
0F
#19900
1F
#20000
0F
#20100
1F
#20200
0F
#20300
1F
#20400
0F
#20500
1F
#20600
0F
#20700
1F
#20800
0F
#20900
1F
#21000
0F
#21100
1F
#21200
0F
#21300
b100 A
b100 y
b100 d$
b11 B
b11 z
b11 c$
b10 C
b10 {
b10 b$
b1 D
b1 |
b1 /#
b1 =#
b1 a$
06
07
08
09
1F
#21400
0F
#21500
b0 A
b0 y
b0 d$
b0 B
b0 z
b0 c$
b0 C
b0 {
b0 b$
b0 D
b0 |
b0 /#
b0 =#
b0 a$
1F
#21600
0F
#21700
1F
#21800
0F
#21900
1F
#22000
0F
#22100
1F
#22200
0F
#22300
b100000100 A
b100000100 y
b100000100 d$
b100000011 B
b100000011 z
b100000011 c$
b100000010 C
b100000010 {
b100000010 b$
b100000001 D
b100000001 |
b100000001 /#
b100000001 =#
b100000001 a$
1F
#22400
0F
#22500
b0 A
b0 y
b0 d$
b0 B
b0 z
b0 c$
b0 C
b0 {
b0 b$
b0 D
b0 |
b0 /#
b0 =#
b0 a$
1F
#22600
0F
#22700
1F
#22800
0F
#22900
1F
#23000
0F
#23100
1F
#23200
0F
#23300
b1000000100 A
b1000000100 y
b1000000100 d$
b1000000011 B
b1000000011 z
b1000000011 c$
b1000000010 C
b1000000010 {
b1000000010 b$
b1000000001 D
b1000000001 |
b1000000001 /#
b1000000001 =#
b1000000001 a$
1F
#23400
0F
#23500
b0 A
b0 y
b0 d$
b0 B
b0 z
b0 c$
b0 C
b0 {
b0 b$
b0 D
b0 |
b0 /#
b0 =#
b0 a$
1F
#23600
0F
#23700
1F
#23800
0F
#23900
1F
#24000
0F
#24100
1F
#24200
0F
#24300
1F
#24400
0F
#24500
1F
#24600
0F
#24700
b1100000100 A
b1100000100 y
b1100000100 d$
b1100000011 B
b1100000011 z
b1100000011 c$
b1100000010 C
b1100000010 {
b1100000010 b$
b1100000001 D
b1100000001 |
b1100000001 /#
b1100000001 =#
b1100000001 a$
1F
#24800
0F
#24900
b0 A
b0 y
b0 d$
b0 B
b0 z
b0 c$
b0 C
b0 {
b0 b$
b0 D
b0 |
b0 /#
b0 =#
b0 a$
1F
#25000
0F
#25100
1F
#25200
0F
#25300
1F
#25400
0F
#25500
1F
#25600
0F
#25700
1F
#25800
0F
#25900
1F
#26000
0F
#26100
1F
#26200
0F
#26300
1F
#26400
0F
#26500
1F
#26600
0F
#26700
1F
#26800
0F
#26900
1F
#27000
0F
#27100
1F
#27200
0F
#27300
1F
#27400
0F
#27500
1F
#27600
0F
#27700
1F
#27800
0F
#27900
1F
#28000
0F
#28100
1F
#28200
0F
#28300
1F
#28400
0F
#28500
1F
#28600
0F
#28700
19
1F
#28800
0F
#28900
1F
#29000
0F
#29100
1F
#29200
0F
#29300
1F
#29400
0F
#29500
1F
#29600
0F
#29700
18
1F
#29800
0F
#29900
1F
#30000
0F
#30100
1F
#30200
0F
#30300
1F
#30400
0F
#30500
1F
#30600
0F
#30700
17
1F
#30800
0F
#30900
1F
#31000
0F
#31100
1F
#31200
0F
#31300
1F
#31400
0F
#31500
1F
#31600
0F
#31700
16
1F
#31800
0F
#31900
1F
#32000
0F
#32100
1F
#32200
0F
#32300
1F
#32400
0F
#32500
1F
#32600
0F
#32700
1F
#32800
0F
#32900
1F
#33000
0F
#33100
1F
#33200
0F
#33300
1F
#33400
0F
#33500
1F
#33600
0F
#33700
1F
#33800
0F
#33900
11
1F
#34000
0F
#34100
b1 ;
b1 k
b1 &"
b1 e$
1F
#34200
0F
#34300
b10 ;
b10 k
b10 &"
b10 e$
1F
#34400
0F
#34500
b11 ;
b11 k
b11 &"
b11 e$
1F
#34600
0F
#34700
1F
#34800
0F
#34900
1F
#35000
0F
#35100
1F
#35200
0F
#35300
1F
#35350
