/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "demux_synth.v:2" *)
module demux_synth(reset_L, clk, data_in, \class , data_out0, data_out1, data_out2, data_out3, valid_0, valid_1, valid_2, valid_3);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  (* src = "demux_synth.v:7" *)
  input [1:0] \class ;
  (* src = "demux_synth.v:5" *)
  input clk;
  (* src = "demux_synth.v:6" *)
  input [11:0] data_in;
  (* src = "demux_synth.v:8" *)
  output [11:0] data_out0;
  (* src = "demux_synth.v:8" *)
  output [11:0] data_out1;
  (* src = "demux_synth.v:8" *)
  output [11:0] data_out2;
  (* src = "demux_synth.v:8" *)
  output [11:0] data_out3;
  (* src = "demux_synth.v:4" *)
  input reset_L;
  (* src = "demux_synth.v:9" *)
  output valid_0;
  (* src = "demux_synth.v:9" *)
  output valid_1;
  (* src = "demux_synth.v:9" *)
  output valid_2;
  (* src = "demux_synth.v:9" *)
  output valid_3;
  NOT _032_ (
    .A(\class [1]),
    .Y(_008_)
  );
  NOT _033_ (
    .A(data_in[0]),
    .Y(_009_)
  );
  NOT _034_ (
    .A(data_in[1]),
    .Y(_010_)
  );
  NOT _035_ (
    .A(data_in[2]),
    .Y(_011_)
  );
  NOT _036_ (
    .A(data_in[3]),
    .Y(_012_)
  );
  NOT _037_ (
    .A(data_in[4]),
    .Y(_013_)
  );
  NOT _038_ (
    .A(data_in[5]),
    .Y(_014_)
  );
  NOT _039_ (
    .A(data_in[6]),
    .Y(_015_)
  );
  NOT _040_ (
    .A(data_in[7]),
    .Y(_016_)
  );
  NOT _041_ (
    .A(data_in[8]),
    .Y(_017_)
  );
  NOT _042_ (
    .A(data_in[9]),
    .Y(_018_)
  );
  NOT _043_ (
    .A(data_in[10]),
    .Y(_019_)
  );
  NOT _044_ (
    .A(data_in[11]),
    .Y(_020_)
  );
  NOT _045_ (
    .A(reset_L),
    .Y(_021_)
  );
  NAND _046_ (
    .A(\class [0]),
    .B(reset_L),
    .Y(_022_)
  );
  NOT _047_ (
    .A(_022_),
    .Y(_023_)
  );
  NOR _048_ (
    .A(\class [1]),
    .B(_022_),
    .Y(valid_1)
  );
  NAND _049_ (
    .A(data_in[0]),
    .B(valid_1),
    .Y(_024_)
  );
  NOT _050_ (
    .A(_024_),
    .Y(data_out1[0])
  );
  NAND _051_ (
    .A(data_in[1]),
    .B(valid_1),
    .Y(_025_)
  );
  NOT _052_ (
    .A(_025_),
    .Y(data_out1[1])
  );
  NAND _053_ (
    .A(data_in[2]),
    .B(valid_1),
    .Y(_026_)
  );
  NOT _054_ (
    .A(_026_),
    .Y(data_out1[2])
  );
  NAND _055_ (
    .A(data_in[3]),
    .B(valid_1),
    .Y(_027_)
  );
  NOT _056_ (
    .A(_027_),
    .Y(data_out1[3])
  );
  NAND _057_ (
    .A(data_in[4]),
    .B(valid_1),
    .Y(_028_)
  );
  NOT _058_ (
    .A(_028_),
    .Y(data_out1[4])
  );
  NAND _059_ (
    .A(data_in[5]),
    .B(valid_1),
    .Y(_029_)
  );
  NOT _060_ (
    .A(_029_),
    .Y(data_out1[5])
  );
  NAND _061_ (
    .A(data_in[6]),
    .B(valid_1),
    .Y(_030_)
  );
  NOT _062_ (
    .A(_030_),
    .Y(data_out1[6])
  );
  NAND _063_ (
    .A(data_in[7]),
    .B(valid_1),
    .Y(_031_)
  );
  NOT _064_ (
    .A(_031_),
    .Y(data_out1[7])
  );
  NAND _065_ (
    .A(data_in[8]),
    .B(valid_1),
    .Y(_000_)
  );
  NOT _066_ (
    .A(_000_),
    .Y(data_out1[8])
  );
  NAND _067_ (
    .A(data_in[9]),
    .B(valid_1),
    .Y(_001_)
  );
  NOT _068_ (
    .A(_001_),
    .Y(data_out1[9])
  );
  NAND _069_ (
    .A(data_in[10]),
    .B(valid_1),
    .Y(_002_)
  );
  NOT _070_ (
    .A(_002_),
    .Y(data_out1[10])
  );
  NAND _071_ (
    .A(data_in[11]),
    .B(valid_1),
    .Y(_003_)
  );
  NOT _072_ (
    .A(_003_),
    .Y(data_out1[11])
  );
  NAND _073_ (
    .A(\class [1]),
    .B(_023_),
    .Y(_004_)
  );
  NOT _074_ (
    .A(_004_),
    .Y(valid_3)
  );
  NOR _075_ (
    .A(_009_),
    .B(_004_),
    .Y(data_out3[0])
  );
  NOR _076_ (
    .A(_010_),
    .B(_004_),
    .Y(data_out3[1])
  );
  NOR _077_ (
    .A(_011_),
    .B(_004_),
    .Y(data_out3[2])
  );
  NOR _078_ (
    .A(_012_),
    .B(_004_),
    .Y(data_out3[3])
  );
  NOR _079_ (
    .A(_013_),
    .B(_004_),
    .Y(data_out3[4])
  );
  NOR _080_ (
    .A(_014_),
    .B(_004_),
    .Y(data_out3[5])
  );
  NOR _081_ (
    .A(_015_),
    .B(_004_),
    .Y(data_out3[6])
  );
  NOR _082_ (
    .A(_016_),
    .B(_004_),
    .Y(data_out3[7])
  );
  NOR _083_ (
    .A(_017_),
    .B(_004_),
    .Y(data_out3[8])
  );
  NOR _084_ (
    .A(_018_),
    .B(_004_),
    .Y(data_out3[9])
  );
  NOR _085_ (
    .A(_019_),
    .B(_004_),
    .Y(data_out3[10])
  );
  NOR _086_ (
    .A(_020_),
    .B(_004_),
    .Y(data_out3[11])
  );
  NOR _087_ (
    .A(\class [0]),
    .B(_021_),
    .Y(_005_)
  );
  NAND _088_ (
    .A(\class [1]),
    .B(_005_),
    .Y(_006_)
  );
  NOT _089_ (
    .A(_006_),
    .Y(valid_2)
  );
  NOR _090_ (
    .A(_009_),
    .B(_006_),
    .Y(data_out2[0])
  );
  NOR _091_ (
    .A(_010_),
    .B(_006_),
    .Y(data_out2[1])
  );
  NOR _092_ (
    .A(_011_),
    .B(_006_),
    .Y(data_out2[2])
  );
  NOR _093_ (
    .A(_012_),
    .B(_006_),
    .Y(data_out2[3])
  );
  NOR _094_ (
    .A(_013_),
    .B(_006_),
    .Y(data_out2[4])
  );
  NOR _095_ (
    .A(_014_),
    .B(_006_),
    .Y(data_out2[5])
  );
  NOR _096_ (
    .A(_015_),
    .B(_006_),
    .Y(data_out2[6])
  );
  NOR _097_ (
    .A(_016_),
    .B(_006_),
    .Y(data_out2[7])
  );
  NOR _098_ (
    .A(_017_),
    .B(_006_),
    .Y(data_out2[8])
  );
  NOR _099_ (
    .A(_018_),
    .B(_006_),
    .Y(data_out2[9])
  );
  NOR _100_ (
    .A(_019_),
    .B(_006_),
    .Y(data_out2[10])
  );
  NOR _101_ (
    .A(_020_),
    .B(_006_),
    .Y(data_out2[11])
  );
  NAND _102_ (
    .A(_008_),
    .B(_005_),
    .Y(_007_)
  );
  NOT _103_ (
    .A(_007_),
    .Y(valid_0)
  );
  NOR _104_ (
    .A(_009_),
    .B(_007_),
    .Y(data_out0[0])
  );
  NOR _105_ (
    .A(_010_),
    .B(_007_),
    .Y(data_out0[1])
  );
  NOR _106_ (
    .A(_011_),
    .B(_007_),
    .Y(data_out0[2])
  );
  NOR _107_ (
    .A(_012_),
    .B(_007_),
    .Y(data_out0[3])
  );
  NOR _108_ (
    .A(_013_),
    .B(_007_),
    .Y(data_out0[4])
  );
  NOR _109_ (
    .A(_014_),
    .B(_007_),
    .Y(data_out0[5])
  );
  NOR _110_ (
    .A(_015_),
    .B(_007_),
    .Y(data_out0[6])
  );
  NOR _111_ (
    .A(_016_),
    .B(_007_),
    .Y(data_out0[7])
  );
  NOR _112_ (
    .A(_017_),
    .B(_007_),
    .Y(data_out0[8])
  );
  NOR _113_ (
    .A(_018_),
    .B(_007_),
    .Y(data_out0[9])
  );
  NOR _114_ (
    .A(_019_),
    .B(_007_),
    .Y(data_out0[10])
  );
  NOR _115_ (
    .A(_020_),
    .B(_007_),
    .Y(data_out0[11])
  );
endmodule
